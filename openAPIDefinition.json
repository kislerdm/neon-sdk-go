{
    "openapi": "3.0.3",
    "servers": [
        {
            "url": "https://console.neon.tech/api/v2"
        }
    ],
    "info": {
        "title": "Neon API",
        "description": "The Neon API allows you to access and manage Neon programmatically. You can use the Neon API to manage API keys, projects, branches, compute endpoints, databases, roles, and operations. For information about these features, refer to the [Neon documentation](https://neon.tech/docs/manage/overview/).\n\nYou can run Neon API requests from this API reference using the **Try It** feature. Enter your API key as a **Bearer** token in the **Authoization** section of the page.\n\nYou can create and manage API keys in the Neon Console. See [Manage API keys](https://neon.tech/docs/manage/api-keys/) for instructions.",
        "version": "v2",
        "contact": {
            "email": "support@neon.tech"
        },
        "license": {
            "name": "Proprietary"
        }
    },
    "security": [
        {
            "BearerAuth": []
        },
        {
            "CookieAuth": []
        }
    ],
    "tags": [
        {
            "name": "API Key",
            "description": "These methods allow you to create and manage API keys for your Neon account. For related information, see [Manage API keys](https://neon.tech/docs/manage/api-keys)."
        },
        {
            "name": "Operation",
            "description": "These methods allow you to view operation details for your Neon project. For related information, see [Operations](https://neon.tech/docs/manage/operations)."
        },
        {
            "name": "Project",
            "description": "These methods allow you to create and manage Neon projects. For related information, see [Manage projects](https://neon.tech/docs/manage/projects)."
        },
        {
            "name": "Branch",
            "description": "These methods allow you to create and manage branches in your Neon project. For related information, see [Manage branches](https://neon.tech/docs/manage/branches)."
        },
        {
            "name": "Endpoint",
            "description": "These methods allow you to create and manage compute endpoints in your Neon project. For related information, see [Manage compute endpoints](https://neon.tech/docs/manage/endpoints)."
        },
        {
            "name": "Preview",
            "description": "New API methods that are in a Preview state and may be subject to changes."
        },
        {
            "name": "Users",
            "description": "These methods allow you to manage your Neon user account."
        },
        {
            "name": "Consumption",
            "description": "These methods allow you to view consumption details for your Neon account."
        }
    ],
    "paths": {
        "/api_keys": {
            "get": {
                "summary": "Get a list of API keys",
                "description": "Retrieves the API keys for your Neon account.\nThe response does not include API key tokens. A token is only provided when creating an API key.\nAPI keys can also be managed in the Neon Console.\nFor more information, see [Manage API keys](https://neon.tech/docs/manage/api-keys/).\n",
                "tags": [
                    "API Key"
                ],
                "operationId": "listApiKeys",
                "responses": {
                    "200": {
                        "description": "Returned the API keys for the Neon account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKeysListResponseItem"
                                    },
                                    "example": [
                                        {
                                            "id": 165432,
                                            "name": "mykey_1",
                                            "created_at": "2022-11-15T20:13:35Z",
                                            "last_used_at": "2022-11-15T20:22:51Z",
                                            "last_used_from_addr": "192.0.2.255"
                                        },
                                        {
                                            "id": 165433,
                                            "name": "mykey_2",
                                            "created_at": "2022-11-15T20:12:36Z",
                                            "last_used_at": "2022-11-15T20:15:04Z",
                                            "last_used_from_addr": "192.0.2.255"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "post": {
                "summary": "Create an API key",
                "description": "Creates an API key.\nThe `key_name` is a user-specified name for the key.\nThis method returns an `id` and `key`. The `key` is a randomly generated, 64-bit token required to access the Neon API.\nAPI keys can also be managed in the Neon Console.\nSee [Manage API keys](https://neon.tech/docs/manage/api-keys/).\n",
                "tags": [
                    "API Key"
                ],
                "operationId": "createApiKey",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKeyCreateRequest"
                            },
                            "example": {
                                "key_name": "mykey"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Created an API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyCreateResponse"
                                },
                                "example": {
                                    "id": 165434,
                                    "key": "9v1faketcjbl4sn1013keyd43n2a8qlfakeog8yvp40hx16keyjo1bpds4y2dfms3",
                                    "name": "mykey_1",
                                    "created_at": "2022-11-15T20:13:35Z"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/api_keys/{key_id}": {
            "delete": {
                "summary": "Revoke an API key",
                "description": "Revokes the specified API key.\nAn API key that is no longer needed can be revoked.\nThis action cannot be reversed.\nYou can obtain `key_id` values by listing the API keys for your Neon account.\nAPI keys can also be managed in the Neon Console.\nSee [Manage API keys](https://neon.tech/docs/manage/api-keys/).\n",
                "tags": [
                    "API Key"
                ],
                "operationId": "revokeApiKey",
                "parameters": [
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "The API key ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revoked the specified API key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyRevokeResponse"
                                },
                                "example": {
                                    "id": 165435,
                                    "name": "mykey",
                                    "revoked": true,
                                    "last_used_at": "2022-11-15T20:15:04Z",
                                    "last_used_from_addr": "192.0.2.255"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/operations/{operation_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "operation_id",
                    "in": "path",
                    "description": "The operation ID",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Get operation details",
                "description": "Retrieves details for the specified operation.\nAn operation is an action performed on a Neon project resource.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain a `operation_id` by listing operations for the project.\n",
                "tags": [
                    "Operation"
                ],
                "operationId": "getProjectOperation",
                "responses": {
                    "200": {
                        "description": "Returned details for the specified operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationResponse"
                                },
                                "example": {
                                    "operation": {
                                        "id": "a07f8772-1877-4da9-a939-3a3ae62d1d8d",
                                        "project_id": "floral-king-961888",
                                        "branch_id": "br-bitter-sound-247814",
                                        "endpoint_id": "ep-dark-snowflake-942567",
                                        "action": "create_timeline",
                                        "status": "finished",
                                        "failures_count": 0,
                                        "created_at": "2022-10-04T18:20:17Z",
                                        "updated_at": "2022-10-04T18:20:18Z",
                                        "total_duration_ms": 100
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "summary": "Get a list of projects",
                "description": "Retrieves a list of projects for the Neon account.\nA project is the top-level object in the Neon object hierarchy.\nFor more information, see [Manage projects](https://neon.tech/docs/manage/projects/).\n",
                "tags": [
                    "Project"
                ],
                "operationId": "listProjects",
                "parameters": [
                    {
                        "name": "cursor",
                        "description": "Specify the cursor value from the previous response to retrieve the next batch of projects.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Specify a value from 1 to 400 to limit number of projects in the response.",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "maximum": 400
                        }
                    },
                    {
                        "name": "search",
                        "description": "Search by project `name` or `id`. You can specify partial `name` or `id` values to filter results.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "org_id",
                        "description": "Search for projects by `org_id`.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned a list of projects for the Neon account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ProjectsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationResponse"
                                        }
                                    ]
                                },
                                "example": {
                                    "projects": [
                                        {
                                            "id": "shiny-wind-028834",
                                            "platform_id": "aws",
                                            "region_id": "aws-us-east-2",
                                            "name": "shiny-wind-028834",
                                            "provisioner": "k8s-pod",
                                            "pg_version": 15,
                                            "created_at": "2022-11-23T17:42:25Z",
                                            "updated_at": "2022-11-23T17:42:25Z",
                                            "proxy_host": "us-east-2.aws.neon.tech",
                                            "cpu_used_sec": 0,
                                            "branch_logical_size_limit": 0,
                                            "owner_id": "1232111",
                                            "creation_source": "console",
                                            "store_passwords": true,
                                            "branch_logical_size_limit_bytes": 10800,
                                            "active_time": 100
                                        },
                                        {
                                            "id": "winter-boat-259881",
                                            "platform_id": "aws",
                                            "region_id": "aws-us-east-2",
                                            "name": "winter-boat-259881",
                                            "provisioner": "k8s-pod",
                                            "pg_version": 15,
                                            "created_at": "2022-11-23T17:52:25Z",
                                            "updated_at": "2022-11-23T17:52:25Z",
                                            "proxy_host": "us-east-2.aws.neon.tech",
                                            "cpu_used_sec": 0,
                                            "branch_logical_size_limit": 0,
                                            "owner_id": "1232111",
                                            "creation_source": "console",
                                            "store_passwords": true,
                                            "branch_logical_size_limit_bytes": 10800,
                                            "active_time": 100,
                                            "org_id": "org-morning-bread-81040908"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "post": {
                "summary": "Create a project",
                "description": "Creates a Neon project.\nA project is the top-level object in the Neon object hierarchy.\nPlan limits define how many projects you can create.\nNeon's Free plan permits one project per Neon account.\nFor more information, see [Manage projects](https://neon.tech/docs/manage/projects/).\n\nYou can specify a region and Postgres version in the request body.\nNeon currently supports PostgreSQL 14, 15, and 16.\nFor supported regions and `region_id` values, see [Regions](https://neon.tech/docs/introduction/regions/).\n",
                "tags": [
                    "Project"
                ],
                "operationId": "createProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreateRequest"
                            },
                            "examples": {
                                "required_attributes_only": {
                                    "summary": "Required attributes only",
                                    "value": {
                                        "project": {
                                            "name": "myproject"
                                        }
                                    }
                                },
                                "commonly_specified_attributes": {
                                    "summary": "Commonly-specified attributes",
                                    "value": {
                                        "project": {
                                            "name": "myproject",
                                            "region_id": "aws-us-east-2",
                                            "pg_version": 15
                                        }
                                    }
                                },
                                "with_autoscaling": {
                                    "summary": "With autoscaling attributes",
                                    "value": {
                                        "project": {
                                            "name": "myproject",
                                            "region_id": "aws-us-east-2",
                                            "pg_version": 15,
                                            "autoscaling_limit_min_cu": 0.25,
                                            "autoscaling_limit_max_cu": 1,
                                            "provisioner": "k8s-neonvm"
                                        }
                                    }
                                },
                                "with_branch_attributes": {
                                    "summary": "With branch attributes",
                                    "value": {
                                        "project": {
                                            "name": "myproject",
                                            "region_id": "aws-us-east-2",
                                            "pg_version": 15,
                                            "branch": {
                                                "name": "mybranch",
                                                "role_name": "sally",
                                                "database_name": "mydb"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreatedProject"
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/shared": {
            "get": {
                "summary": "Get a list of shared projects",
                "description": "Retrieves a list of shared projects for the Neon account.\nA project is the top-level object in the Neon object hierarchy.\nFor more information, see [Manage projects](https://neon.tech/docs/manage/projects/).\n",
                "tags": [
                    "Project"
                ],
                "operationId": "listSharedProjects",
                "parameters": [
                    {
                        "name": "cursor",
                        "description": "Specify the cursor value from the previous response to get the next batch of projects.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Specify a value from 1 to 400 to limit number of projects in the response.",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "maximum": 400
                        }
                    },
                    {
                        "name": "search",
                        "description": "Search query by name or id.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned a list of shared projects for the Neon account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ProjectsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationResponse"
                                        }
                                    ]
                                },
                                "example": {
                                    "projects": [
                                        {
                                            "id": "shiny-wind-028834",
                                            "platform_id": "aws",
                                            "region_id": "aws-us-east-2",
                                            "name": "shiny-wind-028834",
                                            "provisioner": "k8s-pod",
                                            "pg_version": 15,
                                            "created_at": "2022-11-23T17:42:25Z",
                                            "updated_at": "2022-11-23T17:42:25Z",
                                            "proxy_host": "us-east-2.aws.neon.tech",
                                            "cpu_used_sec": 0,
                                            "branch_logical_size_limit": 0,
                                            "owner_id": "1232111",
                                            "creation_source": "console",
                                            "store_passwords": true,
                                            "branch_logical_size_limit_bytes": 10800,
                                            "active_time": 100
                                        },
                                        {
                                            "id": "winter-boat-259881",
                                            "platform_id": "aws",
                                            "region_id": "aws-us-east-2",
                                            "name": "winter-boat-259881",
                                            "provisioner": "k8s-pod",
                                            "pg_version": 15,
                                            "created_at": "2022-11-23T17:52:25Z",
                                            "updated_at": "2022-11-23T17:52:25Z",
                                            "proxy_host": "us-east-2.aws.neon.tech",
                                            "cpu_used_sec": 0,
                                            "branch_logical_size_limit": 0,
                                            "owner_id": "1232111",
                                            "creation_source": "console",
                                            "store_passwords": true,
                                            "branch_logical_size_limit_bytes": 10800,
                                            "active_time": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get project details",
                "description": "Retrieves information about the specified project.\nA project is the top-level object in the Neon object hierarchy.\nYou can obtain a `project_id` by listing the projects for your Neon account.\n",
                "tags": [
                    "Project"
                ],
                "operationId": "getProject",
                "responses": {
                    "200": {
                        "description": "Returned information about the specified project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                },
                                "example": {
                                    "project": {
                                        "id": "shiny-wind-028834",
                                        "platform_id": "aws",
                                        "region_id": "aws-us-east-2",
                                        "name": "shiny-wind-028834",
                                        "provisioner": "k8s-pod",
                                        "pg_version": 15,
                                        "history_retention_seconds": 604800,
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:25Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "branch_logical_size_limit": 0,
                                        "cpu_used_sec": 10,
                                        "owner_id": "1232111",
                                        "owner": {
                                            "email": "some@email.com",
                                            "branches_limit": 10,
                                            "subscription_type": "scale"
                                        },
                                        "creation_source": "console",
                                        "store_passwords": true,
                                        "branch_logical_size_limit_bytes": 10500,
                                        "data_storage_bytes_hour": 1040,
                                        "data_transfer_bytes": 1000000,
                                        "written_data_bytes": 100800,
                                        "compute_time_seconds": 100,
                                        "active_time_seconds": 100,
                                        "consumption_period_start": "2023-02-01T00:00:00Z",
                                        "consumption_period_end": "2023-03-01T00:00:00Z"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "patch": {
                "summary": "Update a project",
                "description": "Updates the specified project.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nNeon permits updating the project name only.\n",
                "tags": [
                    "Project"
                ],
                "operationId": "updateProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdateRequest"
                            },
                            "example": {
                                "project": {
                                    "name": "myproject"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated the specified project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ProjectResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/OperationsResponse"
                                        }
                                    ]
                                },
                                "example": {
                                    "operations": [],
                                    "project": {
                                        "id": "shiny-wind-028834",
                                        "platform_id": "aws",
                                        "region_id": "aws-us-east-2",
                                        "name": "myproject",
                                        "provisioner": "k8s-pod",
                                        "pg_version": 15,
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-12-04T02:39:25Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "branch_logical_size_limit": 0,
                                        "cpu_used_sec": 213230,
                                        "owner_id": "1232111",
                                        "creation_source": "console",
                                        "store_passwords": true,
                                        "branch_logical_size_limit_bytes": 10500,
                                        "data_storage_bytes_hour": 1040,
                                        "data_transfer_bytes": 1000000,
                                        "written_data_bytes": 100800,
                                        "compute_time_seconds": 100,
                                        "active_time_seconds": 100,
                                        "history_retention_seconds": 604800,
                                        "consumption_period_start": "2023-02-01T00:00:00Z",
                                        "consumption_period_end": "2023-03-01T00:00:00Z"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a project",
                "description": "Deletes the specified project.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nDeleting a project is a permanent action.\nDeleting a project also deletes endpoints, branches, databases, and users that belong to the project.\n",
                "tags": [
                    "Project"
                ],
                "operationId": "deleteProject",
                "responses": {
                    "200": {
                        "description": "Deleted the specified project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                },
                                "example": {
                                    "project": {
                                        "id": "bold-cloud-468218",
                                        "platform_id": "aws",
                                        "region_id": "aws-us-east-2",
                                        "name": "bold-cloud-468218",
                                        "provisioner": "k8s-pod",
                                        "pg_version": 15,
                                        "created_at": "2022-11-30T18:41:29Z",
                                        "updated_at": "2022-11-30T18:41:29Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "cpu_used_sec": 23004200,
                                        "branch_logical_size_limit": 0,
                                        "owner_id": "1232111",
                                        "creation_source": "console",
                                        "store_passwords": true,
                                        "branch_logical_size_limit_bytes": 10500,
                                        "data_storage_bytes_hour": 1040,
                                        "data_transfer_bytes": 1000000,
                                        "written_data_bytes": 100800,
                                        "compute_time_seconds": 100,
                                        "active_time_seconds": 100,
                                        "history_retention_seconds": 604800,
                                        "consumption_period_start": "2023-02-01T00:00:00Z",
                                        "consumption_period_end": "2023-03-01T00:00:00Z"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/operations": {
            "get": {
                "summary": "Get a list of operations",
                "description": "Retrieves a list of operations for the specified Neon project.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nThe number of operations returned can be large.\nTo paginate the response, issue an initial request with a `limit` value.\nThen, add the `cursor` value that was returned in the response to the next request.\n",
                "tags": [
                    "Operation"
                ],
                "operationId": "listProjectOperations",
                "parameters": [
                    {
                        "name": "cursor",
                        "description": "Specify the cursor value from the previous response to get the next batch of operations",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Specify a value from 1 to 1000 to limit number of operations in the response",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The Neon project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ListOperations"
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/permissions": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "List project access",
                "description": "Retrieves details about users who have access to the project, including the permission `id`, the granted-to email address, and the date project access was granted.",
                "tags": [
                    "Project"
                ],
                "operationId": "listProjectPermissions",
                "responses": {
                    "200": {
                        "description": "Returned project access details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectPermissions"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "post": {
                "summary": "Grant project access",
                "description": "Grants project access to the account associated with the specified email address",
                "tags": [
                    "Project"
                ],
                "operationId": "grantPermissionToProject",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantPermissionToProjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Granted project access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectPermission"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/permissions/{permission_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "permission_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "Revoke project access",
                "description": "Revokes project access from the user associted with the specified permisison `id`. You can retrieve a user's permission `id` by listing project access.",
                "tags": [
                    "Project"
                ],
                "operationId": "revokePermissionFromProject",
                "responses": {
                    "200": {
                        "description": "Revoked project access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectPermission"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/connection_uri": {
            "get": {
                "summary": "Get a connection URI",
                "description": "Retrieves a connection URI for the specified database.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `database_name` by listing the databases for a branch.\nYou can obtain a `role_name` by listing the roles for a branch.\n",
                "tags": [
                    "Project"
                ],
                "operationId": "getConnectionURI",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The Neon project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "branch_id",
                        "in": "query",
                        "description": "The branch ID. Defaults to your project's default `branch_id` if not specified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint_id",
                        "in": "query",
                        "description": "The endpoint ID. Defaults to the read-write `endpoint_id` associated with the `branch_id` if not specified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "database_name",
                        "in": "query",
                        "description": "The database name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role_name",
                        "in": "query",
                        "description": "The role name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pooled",
                        "in": "query",
                        "description": "Adds the `-pooler` option to the connection URI when set to `true`, creating a pooled connection URI.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned the connection URI",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionURIResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Create a branch",
                "description": "Creates a branch in the specified project.\nYou can obtain a `project_id` by listing the projects for your Neon account.\n\nThis method does not require a request body, but you can specify one to create a compute endpoint for the branch or to select a non-default parent branch.\nThe default behavior is to create a branch from the project's default branch with no compute endpoint, and the branch name is auto-generated.\nThere is a maximum of one read-write endpoint per branch.\nA branch can have multiple read-only endpoints.\nFor related information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "createProjectBranch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchCreateRequest"
                            },
                            "examples": {
                                "branch_only": {
                                    "summary": "Branch only",
                                    "value": {
                                        "branch": {
                                            "parent_id": "br-aged-salad-637688",
                                            "name": "mybranch"
                                        }
                                    }
                                },
                                "branch_with_endpoint": {
                                    "summary": "Branch with endpoint",
                                    "value": {
                                        "endpoints": [
                                            {
                                                "type": "read_write"
                                            }
                                        ],
                                        "branch": {
                                            "parent_id": "br-aged-salad-637688",
                                            "name": "mybranch"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreatedBranch"
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "get": {
                "summary": "Get a list of branches",
                "description": "Retrieves a list of branches for the specified project.\nYou can obtain a `project_id` by listing the projects for your Neon account.\n\nEach Neon project has a root branch named `main`.\nA `branch_id` value has a `br-` prefix.\nA project may contain child branches that were branched from `main` or from another branch.\nA parent branch is identified by the `parent_id` value, which is the `id` of the parent branch.\nFor related information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "listProjectBranches",
                "responses": {
                    "200": {
                        "description": "Returned a list of branches for the specified project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchesResponse"
                                },
                                "example": {
                                    "branches": [
                                        {
                                            "id": "br-aged-salad-637688",
                                            "project_id": "shiny-wind-028834",
                                            "name": "main",
                                            "current_state": "ready",
                                            "logical_size": 28,
                                            "created_at": "2022-11-23T17:42:25Z",
                                            "updated_at": "2022-11-23T17:42:26Z",
                                            "data_transfer_bytes": 1000000,
                                            "written_data_bytes": 100800,
                                            "compute_time_seconds": 100,
                                            "active_time_seconds": 100,
                                            "cpu_used_sec": 100,
                                            "primary": true,
                                            "default": true,
                                            "protected": false,
                                            "creation_source": "console"
                                        },
                                        {
                                            "id": "br-sweet-breeze-497520",
                                            "project_id": "shiny-wind-028834",
                                            "parent_id": "br-aged-salad-637688",
                                            "parent_lsn": "0/1DE2850",
                                            "name": "dev2",
                                            "current_state": "ready",
                                            "logical_size": 28,
                                            "created_at": "2022-11-30T19:09:48Z",
                                            "updated_at": "2022-11-30T19:09:49Z",
                                            "data_transfer_bytes": 1000000,
                                            "written_data_bytes": 100800,
                                            "compute_time_seconds": 100,
                                            "active_time_seconds": 100,
                                            "cpu_used_sec": 100,
                                            "primary": true,
                                            "default": true,
                                            "protected": false,
                                            "creation_source": "console"
                                        },
                                        {
                                            "id": "br-raspy-hill-832856",
                                            "project_id": "shiny-wind-028834",
                                            "parent_id": "br-aged-salad-637688",
                                            "parent_lsn": "0/19623D8",
                                            "name": "dev1",
                                            "current_state": "ready",
                                            "logical_size": 21,
                                            "created_at": "2022-11-30T17:36:57Z",
                                            "updated_at": "2022-11-30T17:36:57Z",
                                            "data_transfer_bytes": 1000000,
                                            "written_data_bytes": 100800,
                                            "compute_time_seconds": 100,
                                            "active_time_seconds": 100,
                                            "cpu_used_sec": 100,
                                            "primary": true,
                                            "default": true,
                                            "protected": false,
                                            "creation_source": "console"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get branch details",
                "description": "Retrieves information about the specified branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain a `branch_id` by listing the project's branches.\nA `branch_id` value has a `br-` prefix.\n\nEach Neon project is initially created with a root and default branch named `main`.\nA project can contain one or more branches.\nA parent branch is identified by a `parent_id` value, which is the `id` of the parent branch.\nFor related information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "getProjectBranch",
                "responses": {
                    "200": {
                        "description": "Returned information about the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchResponse"
                                },
                                "example": {
                                    "branch": {
                                        "id": "br-aged-salad-637688",
                                        "project_id": "shiny-wind-028834",
                                        "name": "main",
                                        "current_state": "ready",
                                        "logical_size": 28,
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:26Z",
                                        "data_transfer_bytes": 1000000,
                                        "written_data_bytes": 100800,
                                        "compute_time_seconds": 100,
                                        "active_time_seconds": 100,
                                        "cpu_used_sec": 100,
                                        "primary": true,
                                        "default": true,
                                        "protected": false,
                                        "creation_source": "console"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a branch",
                "description": "Deletes the specified branch from a project, and places\nall compute endpoints into an idle state, breaking existing client connections.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain a `branch_id` by listing the project's branches.\nFor related information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n\nWhen a successful response status is received, the compute endpoints are still active,\nand the branch is not yet deleted from storage.\nThe deletion occurs after all operations finish.\nYou cannot delete a project's root or default branch, and you cannot delete a branch that has a child branch.\nA project must have at least one branch.\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "deleteProjectBranch",
                "responses": {
                    "200": {
                        "description": "Deleted the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOperations"
                                },
                                "example": {
                                    "branch": {
                                        "id": "br-aged-salad-637688",
                                        "project_id": "shiny-wind-028834",
                                        "name": "main",
                                        "current_state": "ready",
                                        "logical_size": 28,
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:26Z",
                                        "data_transfer_bytes": 1000000,
                                        "written_data_bytes": 100800,
                                        "compute_time_seconds": 100,
                                        "active_time_seconds": 100,
                                        "cpu_used_sec": 100,
                                        "primary": true,
                                        "default": true,
                                        "protected": false,
                                        "creation_source": "console"
                                    },
                                    "operations": [
                                        {
                                            "id": "b6afbc21-2990-4a76-980b-b57d8c2948f2",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-sweet-breeze-497520",
                                            "endpoint_id": "ep-soft-violet-752733",
                                            "action": "suspend_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-01T19:53:05Z",
                                            "updated_at": "2022-12-01T19:53:05Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "b6afbc21-2990-4a76-980b-b57d8c2948f2",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-sweet-breeze-497520",
                                            "action": "delete_timeline",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-01T19:53:05Z",
                                            "updated_at": "2022-12-01T19:53:05Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Branch"
                ],
                "summary": "Update a branch",
                "description": "Updates the specified branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor more information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n",
                "operationId": "updateProjectBranch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchUpdateRequest"
                            },
                            "example": {
                                "branch": {
                                    "name": "mybranch"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOperations"
                                },
                                "example": {
                                    "branch": {
                                        "id": "br-icy-dream-250089",
                                        "project_id": "shiny-wind-028834",
                                        "parent_id": "br-aged-salad-637688",
                                        "parent_lsn": "0/1E19478",
                                        "name": "mybranch",
                                        "current_state": "ready",
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:26Z",
                                        "data_transfer_bytes": 1000000,
                                        "written_data_bytes": 100800,
                                        "compute_time_seconds": 100,
                                        "active_time_seconds": 100,
                                        "cpu_used_sec": 100,
                                        "primary": true,
                                        "default": true,
                                        "protected": false,
                                        "creation_source": "console"
                                    },
                                    "operations": []
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/restore": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Restore a branch",
                "description": "Restores a branch to an earlier state in its own or another branch's history",
                "operationId": "restoreProjectBranch",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The Neon project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "branch_id",
                        "in": "path",
                        "description": "The branch ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRestoreRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOperations"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/schema": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Get the database schema",
                "description": "Retrieves the schema from the specified database. The `lsn` and `timestamp` values cannot be specified at the same time. If both are omitted, the database schema is retrieved from database's head .",
                "operationId": "getProjectBranchSchema",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The Neon project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "branch_id",
                        "in": "path",
                        "description": "The branch ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "The role on whose behalf the schema is retrieved",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "db_name",
                        "in": "query",
                        "description": "Name of the database for which the schema is retrieved",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lsn",
                        "in": "query",
                        "description": "The Log Sequence Number (LSN) for which the schema is retrieved\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "description": "The point in time for which the schema is retrieved\n",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema definition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchSchemaResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/set_as_primary": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Set branch as primary",
                "deprecated": true,
                "description": "DEPRECATED. Use `/set_as_default` endpoint.\nSets the specified branch as the project's primary branch.\nThe primary designation is automatically removed from the previous primary branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor more information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n",
                "operationId": "setPrimaryProjectBranch",
                "responses": {
                    "200": {
                        "description": "Updated the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOperations"
                                },
                                "example": {
                                    "branch": {
                                        "cpu_used_sec": 1,
                                        "active_time_seconds": 1,
                                        "compute_time_seconds": 1,
                                        "written_data_bytes": 100,
                                        "data_transfer_bytes": 100,
                                        "id": "br-icy-dream-250089",
                                        "project_id": "shiny-wind-028834",
                                        "parent_id": "br-aged-salad-637688",
                                        "parent_lsn": "0/1E19478",
                                        "name": "mybranch",
                                        "current_state": "ready",
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:26Z",
                                        "primary": true,
                                        "default": true,
                                        "protected": false,
                                        "creation_source": "console"
                                    },
                                    "operations": []
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/set_as_default": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Set branch as default",
                "description": "Sets the specified branch as the project's default branch.\nThe default designation is automatically removed from the previous default branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor more information, see [Manage branches](https://neon.tech/docs/manage/branches/).\n",
                "operationId": "setDefaultProjectBranch",
                "responses": {
                    "200": {
                        "description": "Updated the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchOperations"
                                },
                                "example": {
                                    "branch": {
                                        "cpu_used_sec": 1,
                                        "active_time_seconds": 1,
                                        "compute_time_seconds": 1,
                                        "written_data_bytes": 100,
                                        "data_transfer_bytes": 100,
                                        "id": "br-icy-dream-250089",
                                        "project_id": "shiny-wind-028834",
                                        "parent_id": "br-aged-salad-637688",
                                        "parent_lsn": "0/1E19478",
                                        "name": "mybranch",
                                        "current_state": "ready",
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:26Z",
                                        "primary": true,
                                        "default": true,
                                        "protected": false,
                                        "creation_source": "console"
                                    },
                                    "operations": []
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/endpoints": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get a list of branch endpoints",
                "description": "Retrieves a list of compute endpoints for the specified branch.\nNeon permits only one read-write compute endpoint per branch.\nA branch can have multiple read-only compute endpoints.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "listProjectBranchEndpoints",
                "responses": {
                    "200": {
                        "description": "Returned a list of endpoints for the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointsResponse"
                                },
                                "example": {
                                    "endpoints": [
                                        {
                                            "host": "ep-little-smoke-851426.us-east-2.aws.neon.tech",
                                            "id": "ep-little-smoke-851426",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-aged-salad-637688",
                                            "autoscaling_limit_min_cu": 1,
                                            "autoscaling_limit_max_cu": 1,
                                            "region_id": "aws-us-east-2",
                                            "type": "read_write",
                                            "current_state": "idle",
                                            "settings": {
                                                "pg_settings": {}
                                            },
                                            "pooler_enabled": false,
                                            "pooler_mode": "transaction",
                                            "disabled": false,
                                            "passwordless_access": true,
                                            "last_active": "2022-11-23T17:00:00Z",
                                            "created_at": "2022-11-23T17:42:25Z",
                                            "updated_at": "2022-11-30T18:25:21Z",
                                            "proxy_host": "us-east-2.aws.neon.tech",
                                            "creation_source": "console",
                                            "provisioner": "k8s-pod",
                                            "suspend_timeout_seconds": 10800
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/databases": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get a list of databases",
                "description": "Retrieves a list of databases for the specified branch.\nA branch can have multiple databases.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor related information, see [Manage databases](https://neon.tech/docs/manage/databases/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "listProjectBranchDatabases",
                "responses": {
                    "200": {
                        "description": "Returned a list of databases of the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabasesResponse"
                                },
                                "example": {
                                    "databases": [
                                        {
                                            "id": 834686,
                                            "branch_id": "br-aged-salad-637688",
                                            "name": "main",
                                            "owner_name": "casey",
                                            "created_at": "2022-11-30T18:25:15Z",
                                            "updated_at": "2022-11-30T18:25:15Z"
                                        },
                                        {
                                            "id": 834686,
                                            "branch_id": "br-aged-salad-637688",
                                            "name": "mydb",
                                            "owner_name": "casey",
                                            "created_at": "2022-10-30T17:14:13Z",
                                            "updated_at": "2022-10-30T17:14:13Z"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Create a database",
                "description": "Creates a database in the specified branch.\nA branch can have multiple databases.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor related information, see [Manage databases](https://neon.tech/docs/manage/databases/).\n",
                "operationId": "createProjectBranchDatabase",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatabaseCreateRequest"
                            },
                            "example": {
                                "database": {
                                    "name": "mydb",
                                    "owner_name": "casey"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created a database in the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseOperations"
                                },
                                "example": {
                                    "database": {
                                        "id": 876692,
                                        "branch_id": "br-aged-salad-637688",
                                        "name": "mydb",
                                        "owner_name": "casey",
                                        "created_at": "2022-12-04T00:15:04Z",
                                        "updated_at": "2022-12-04T00:15:04Z"
                                    },
                                    "operations": [
                                        {
                                            "id": "39426015-db00-40fa-85c5-1c7072df46d0",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-aged-salad-637688",
                                            "endpoint_id": "ep-little-smoke-851426",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-04T00:15:04Z",
                                            "updated_at": "2022-12-04T00:15:04Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "b7483d4e-33da-4d40-b319-ac858d4d3e69",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-aged-salad-637688",
                                            "endpoint_id": "ep-little-smoke-851426",
                                            "action": "suspend_compute",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-04T00:15:04Z",
                                            "updated_at": "2022-12-04T00:15:04Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/databases/{database_name}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "database_name",
                    "in": "path",
                    "description": "The database name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get database details",
                "description": "Retrieves information about the specified database.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` and `database_name` by listing the branch's databases.\nFor related information, see [Manage databases](https://neon.tech/docs/manage/databases/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "getProjectBranchDatabase",
                "responses": {
                    "200": {
                        "description": "Returned the database details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseResponse"
                                },
                                "example": {
                                    "database": {
                                        "id": 834686,
                                        "branch_id": "br-aged-salad-637688",
                                        "name": "main",
                                        "owner_name": "casey",
                                        "created_at": "2022-11-30T18:25:15Z",
                                        "updated_at": "2022-11-30T18:25:15Z"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Branch"
                ],
                "summary": "Update a database",
                "description": "Updates the specified database in the branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` and `database_name` by listing the branch's databases.\nFor related information, see [Manage databases](https://neon.tech/docs/manage/databases/).\n",
                "operationId": "updateProjectBranchDatabase",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatabaseUpdateRequest"
                            },
                            "example": {
                                "database": {
                                    "name": "mydb",
                                    "owner_name": "sally"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated the database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseOperations"
                                },
                                "example": {
                                    "database": {
                                        "id": 876692,
                                        "branch_id": "br-aged-salad-637688",
                                        "name": "mydb",
                                        "owner_name": "sally",
                                        "created_at": "2022-12-04T00:15:04Z",
                                        "updated_at": "2022-12-04T00:15:04Z"
                                    },
                                    "operations": [
                                        {
                                            "id": "9ef1c2ed-dce4-43aa-bae8-78aea636bf8a",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-aged-salad-637688",
                                            "endpoint_id": "ep-little-smoke-851426",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-04T00:21:01Z",
                                            "updated_at": "2022-12-04T00:21:01Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "42dafb46-f861-497b-ae89-f2bec54f4966",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-aged-salad-637688",
                                            "endpoint_id": "ep-little-smoke-851426",
                                            "action": "suspend_compute",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-04T00:21:01Z",
                                            "updated_at": "2022-12-04T00:21:01Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a database",
                "description": "Deletes the specified database from the branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` and `database_name` by listing the branch's databases.\nFor related information, see [Manage databases](https://neon.tech/docs/manage/databases/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "deleteProjectBranchDatabase",
                "responses": {
                    "200": {
                        "description": "Deleted the specified database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseOperations"
                                },
                                "example": {
                                    "database": {
                                        "id": 851537,
                                        "branch_id": "br-raspy-hill-832856",
                                        "name": "mydb",
                                        "owner_name": "casey",
                                        "created_at": "2022-12-01T19:41:46Z",
                                        "updated_at": "2022-12-01T19:41:46Z"
                                    },
                                    "operations": [
                                        {
                                            "id": "9ef1c2ed-dce4-43aa-bae8-78aea636bf8a",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-raspy-hill-832856",
                                            "endpoint_id": "ep-steep-bush-777093",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-01T19:51:41Z",
                                            "updated_at": "2022-12-01T19:51:41Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "42dafb46-f861-497b-ae89-f2bec54f4966",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-raspy-hill-832856",
                                            "endpoint_id": "ep-steep-bush-777093",
                                            "action": "suspend_compute",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-01T19:51:41Z",
                                            "updated_at": "2022-12-01T19:51:41Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/roles": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get a list of roles",
                "description": "Retrieves a list of Postgres roles from the specified branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor related information, see [Manage roles](https://neon.tech/docs/manage/roles/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "listProjectBranchRoles",
                "responses": {
                    "200": {
                        "description": "Returned a list of roles from the specified branch.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RolesResponse"
                                },
                                "example": {
                                    "roles": [
                                        {
                                            "branch_id": "br-aged-salad-637688",
                                            "name": "casey",
                                            "protected": false,
                                            "created_at": "2022-11-23T17:42:25Z",
                                            "updated_at": "2022-11-23T17:42:25Z"
                                        },
                                        {
                                            "branch_id": "br-aged-salad-637688",
                                            "name": "thomas",
                                            "protected": false,
                                            "created_at": "2022-10-22T17:38:21Z",
                                            "updated_at": "2022-10-22T17:38:21Z"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "post": {
                "summary": "Create a role",
                "description": "Creates a Postgres role in the specified branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nFor related information, see [Manage roles](https://neon.tech/docs/manage/roles/).\n\nConnections established to the active compute endpoint will be dropped.\nIf the compute endpoint is idle, the endpoint becomes active for a short period of time and is suspended afterward.\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "createProjectBranchRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleCreateRequest"
                            },
                            "example": {
                                "role": {
                                    "name": "sally"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created a role in the specified branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleOperations"
                                },
                                "example": {
                                    "role": {
                                        "branch_id": "br-noisy-sunset-458773",
                                        "name": "sally",
                                        "password": "Onf1AjayKwe0",
                                        "protected": false,
                                        "created_at": "2022-12-03T11:58:29Z",
                                        "updated_at": "2022-12-03T11:58:29Z"
                                    },
                                    "operations": [
                                        {
                                            "id": "2c2be371-d5ac-4db5-8b68-79f05e8bc287",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-noisy-sunset-458773",
                                            "endpoint_id": "ep-small-pine-767857",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T11:58:29Z",
                                            "updated_at": "2022-12-03T11:58:29Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/roles/{role_name}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "role_name",
                    "in": "path",
                    "description": "The role name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get role details",
                "description": "Retrieves details about the specified role.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nYou can obtain the `role_name` by listing the roles for a branch.\nIn Neon, the terms \"role\" and \"user\" are synonymous.\nFor related information, see [Manage roles](https://neon.tech/docs/manage/roles/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "getProjectBranchRole",
                "responses": {
                    "200": {
                        "description": "Returned details for the specified role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                },
                                "example": {
                                    "role": {
                                        "branch_id": "br-noisy-sunset-458773",
                                        "name": "casey",
                                        "protected": false,
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-23T17:42:25Z"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a role",
                "description": "Deletes the specified Postgres role from the branch.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nYou can obtain the `role_name` by listing the roles for a branch.\nFor related information, see [Manage roles](https://neon.tech/docs/manage/roles/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "deleteProjectBranchRole",
                "responses": {
                    "200": {
                        "description": "Deleted the specified role from the branch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleOperations"
                                },
                                "example": {
                                    "role": {
                                        "branch_id": "br-raspy-hill-832856",
                                        "name": "thomas",
                                        "protected": false,
                                        "created_at": "2022-12-01T14:36:23Z",
                                        "updated_at": "2022-12-01T14:36:23Z"
                                    },
                                    "operations": [
                                        {
                                            "id": "db646be3-eace-4910-9f60-8150823c5cb8",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-raspy-hill-832856",
                                            "endpoint_id": "ep-steep-bush-777093",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-01T19:48:11Z",
                                            "updated_at": "2022-12-01T19:48:11Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "ab94cdad-7630-4943-a55e-5a0952d2e598",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-raspy-hill-832856",
                                            "endpoint_id": "ep-steep-bush-777093",
                                            "action": "suspend_compute",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-01T19:48:11Z",
                                            "updated_at": "2022-12-01T19:48:11Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/roles/{role_name}/reveal_password": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "role_name",
                    "in": "path",
                    "description": "The role name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get role password",
                "description": "Retrieves the password for the specified Postgres role, if possible.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nYou can obtain the `role_name` by listing the roles for a branch.\nFor related information, see [Manage roles](https://neon.tech/docs/manage/roles/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "getProjectBranchRolePassword",
                "responses": {
                    "200": {
                        "description": "Returned password for the specified role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RolePasswordResponse"
                                },
                                "example": {
                                    "password": "mypass"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Storing passwords is disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/branches/{branch_id}/roles/{role_name}/reset_password": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "branch_id",
                    "in": "path",
                    "description": "The branch ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "role_name",
                    "in": "path",
                    "description": "The role nam",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Reset the role password",
                "description": "Resets the password for the specified Postgres role.\nReturns a new password and operations. The new password is ready to use when the last operation finishes.\nThe old password remains valid until last operation finishes.\nConnections to the compute endpoint are dropped. If idle,\nthe compute endpoint becomes active for a short period of time.\n\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain the `branch_id` by listing the project's branches.\nYou can obtain the `role_name` by listing the roles for a branch.\nFor related information, see [Manage roles](https://neon.tech/docs/manage/roles/).\n",
                "tags": [
                    "Branch"
                ],
                "operationId": "resetProjectBranchRolePassword",
                "responses": {
                    "200": {
                        "description": "Reset the passsword for the specified role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleOperations"
                                },
                                "example": {
                                    "role": {
                                        "branch_id": "br-noisy-sunset-458773",
                                        "name": "sally",
                                        "password": "ClfD0aVuK3eK",
                                        "protected": false,
                                        "created_at": "2022-12-03T12:39:39Z",
                                        "updated_at": "2022-12-03T12:58:18Z"
                                    },
                                    "operations": [
                                        {
                                            "id": "6bef07a0-ebca-40cd-9100-7324036cfff2",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-noisy-sunset-458773",
                                            "endpoint_id": "ep-small-pine-767857",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T12:58:18Z",
                                            "updated_at": "2022-12-03T12:58:18Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "16b5bfca-4697-4194-a338-d2cdc9aca2af",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-noisy-sunset-458773",
                                            "endpoint_id": "ep-small-pine-767857",
                                            "action": "suspend_compute",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T12:58:18Z",
                                            "updated_at": "2022-12-03T12:58:18Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/endpoints": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Create a compute endpoint",
                "description": "Creates a compute endpoint for the specified branch.\nAn endpoint is a Neon compute instance.\nThere is a maximum of one read-write compute endpoint per branch.\nIf the specified branch already has a read-write compute endpoint, the operation fails.\nA branch can have multiple read-only compute endpoints.\n\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain `branch_id` by listing the project's branches.\nA `branch_id` has a `br-` prefix.\nFor supported regions and `region_id` values, see [Regions](https://neon.tech/docs/introduction/regions/).\nFor more information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "createProjectEndpoint",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointCreateRequest"
                            },
                            "examples": {
                                "required_attributes_only": {
                                    "summary": "Required attributes only",
                                    "value": {
                                        "endpoint": {
                                            "branch_id": "br-floral-mountain-251143",
                                            "type": "read_write"
                                        }
                                    }
                                },
                                "with_region_attribute": {
                                    "summary": "With region attribute",
                                    "value": {
                                        "endpoint": {
                                            "branch_id": "br-floral-mountain-251143",
                                            "type": "read_write",
                                            "region_id": "aws-us-east-2"
                                        }
                                    }
                                },
                                "with_pooler_attribute": {
                                    "summary": "With pooler attribute",
                                    "value": {
                                        "endpoint": {
                                            "branch_id": "br-floral-mountain-251143",
                                            "type": "read_write",
                                            "pooler_enabled": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created a compute endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOperations"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-shrill-thunder-454069.us-east-2.aws.neon.tech",
                                        "id": "ep-shrill-thunder-454069",
                                        "project_id": "bitter-meadow-966132",
                                        "branch_id": "br-proud-paper-090813",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "init",
                                        "pending_state": "active",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "created_at": "2022-12-03T15:37:07Z",
                                        "updated_at": "2022-12-03T15:37:07Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "suspend_timeout_seconds": 10800,
                                        "provisioner": "k8s-pod"
                                    },
                                    "operations": [
                                        {
                                            "id": "874f8bfe-f51d-4c61-85af-a29bea73e0e2",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "start_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:37:07Z",
                                            "updated_at": "2022-12-03T15:37:07Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "get": {
                "summary": "Get a list of compute endpoints",
                "description": "Retrieves a list of compute endpoints for the specified project.\nA compute endpoint is a Neon compute instance.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nFor information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "listProjectEndpoints",
                "responses": {
                    "200": {
                        "description": "Returned a list of endpoints for the specified project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointsResponse"
                                },
                                "example": {
                                    "endpoints": [
                                        {
                                            "host": "ep-little-smoke-851426.us-east-2.aws.neon.tech",
                                            "creation_source": "console",
                                            "suspend_timeout_seconds": 10800,
                                            "provisioner": "k8s-pod",
                                            "id": "ep-little-smoke-851426",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-aged-salad-637688",
                                            "autoscaling_limit_min_cu": 1,
                                            "autoscaling_limit_max_cu": 1,
                                            "region_id": "aws-us-east-2",
                                            "type": "read_write",
                                            "current_state": "idle",
                                            "settings": {
                                                "pg_settings": {}
                                            },
                                            "pooler_enabled": false,
                                            "pooler_mode": "transaction",
                                            "disabled": false,
                                            "passwordless_access": true,
                                            "last_active": "2022-11-23T17:00:00Z",
                                            "created_at": "2022-11-23T17:42:25Z",
                                            "updated_at": "2022-11-30T18:25:21Z",
                                            "proxy_host": "us-east-2.aws.neon.tech"
                                        },
                                        {
                                            "host": "ep-steep-bush-777093.us-east-2.aws.neon.tech",
                                            "creation_source": "console",
                                            "suspend_timeout_seconds": 10800,
                                            "provisioner": "k8s-pod",
                                            "id": "ep-steep-bush-777093",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-raspy-hill-832856",
                                            "autoscaling_limit_min_cu": 1,
                                            "autoscaling_limit_max_cu": 1,
                                            "region_id": "aws-us-east-2",
                                            "type": "read_write",
                                            "current_state": "idle",
                                            "settings": {
                                                "pg_settings": {}
                                            },
                                            "pooler_enabled": false,
                                            "pooler_mode": "transaction",
                                            "disabled": false,
                                            "passwordless_access": true,
                                            "last_active": "2022-11-30T17:00:00Z",
                                            "created_at": "2022-11-30T17:36:57Z",
                                            "updated_at": "2022-11-30T18:42:58Z",
                                            "proxy_host": "us-east-2.aws.neon.tech"
                                        },
                                        {
                                            "host": "ep-soft-violet-752733.us-east-2.aws.neon.tech",
                                            "creation_source": "console",
                                            "suspend_timeout_seconds": 10800,
                                            "provisioner": "k8s-pod",
                                            "id": "ep-soft-violet-752733",
                                            "project_id": "shiny-wind-028834",
                                            "branch_id": "br-sweet-breeze-497520",
                                            "autoscaling_limit_min_cu": 1,
                                            "autoscaling_limit_max_cu": 1,
                                            "region_id": "aws-us-east-2",
                                            "type": "read_write",
                                            "current_state": "idle",
                                            "settings": {
                                                "pg_settings": {}
                                            },
                                            "pooler_enabled": false,
                                            "pooler_mode": "transaction",
                                            "disabled": false,
                                            "passwordless_access": true,
                                            "last_active": "2022-11-30T19:00:00Z",
                                            "created_at": "2022-11-30T19:09:48Z",
                                            "updated_at": "2022-11-30T19:14:51Z",
                                            "proxy_host": "us-east-2.aws.neon.tech"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/endpoints/{endpoint_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "endpoint_id",
                    "in": "path",
                    "description": "The endpoint ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get a compute endpoint",
                "description": "Retrieves information about the specified compute endpoint.\nA compute endpoint is a Neon compute instance.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain an `endpoint_id` by listing your project's compute endpoints.\nAn `endpoint_id` has an `ep-` prefix.\nFor information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "getProjectEndpoint",
                "responses": {
                    "200": {
                        "description": "Returned information about the specified endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointResponse"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-little-smoke-851426.us-east-2.aws.neon.tech",
                                        "id": "ep-little-smoke-851426",
                                        "project_id": "shiny-wind-028834",
                                        "branch_id": "br-aged-salad-637688",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "idle",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "last_active": "2022-11-23T17:00:00Z",
                                        "created_at": "2022-11-23T17:42:25Z",
                                        "updated_at": "2022-11-30T18:25:21Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "provisioner": "k8s-pod",
                                        "suspend_timeout_seconds": 10800
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a compute endpoint",
                "description": "Delete the specified compute endpoint.\nA compute endpoint is a Neon compute instance.\nDeleting a compute endpoint drops existing network connections to the compute endpoint.\nThe deletion is completed when last operation in the chain finishes successfully.\n\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain an `endpoint_id` by listing your project's compute endpoints.\nAn `endpoint_id` has an `ep-` prefix.\nFor information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "deleteProjectEndpoint",
                "responses": {
                    "200": {
                        "description": "Deleted the specified compute endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOperations"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-steep-bush-777093.us-east-2.aws.neon.tech",
                                        "id": "ep-steep-bush-777093",
                                        "project_id": "shiny-wind-028834",
                                        "branch_id": "br-raspy-hill-832856",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "idle",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "last_active": "2022-12-03T15:00:00Z",
                                        "created_at": "2022-12-03T15:37:07Z",
                                        "updated_at": "2022-12-03T15:49:10Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "provisioner": "k8s-pod",
                                        "suspend_timeout_seconds": 10800
                                    },
                                    "operations": [
                                        {
                                            "id": "fd11748e-3c68-458f-b9e3-66d409e3eef0",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "suspend_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Endpoint"
                ],
                "summary": "Update a compute endpoint",
                "description": "Updates the specified compute endpoint.\n\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain an `endpoint_id` and `branch_id` by listing your project's compute endpoints.\nAn `endpoint_id` has an `ep-` prefix. A `branch_id` has a `br-` prefix.\n For more information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n\nIf the returned list of operations is not empty, the compute endpoint is not ready to use.\nThe client must wait for the last operation to finish before using the compute endpoint.\nIf the compute endpoint was idle before the update, it becomes active for a short period of time,\nand the control plane suspends it again after the update.\n",
                "operationId": "updateProjectEndpoint",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointUpdateRequest"
                            },
                            "example": {
                                "endpoint": {
                                    "branch_id": "br-tiny-grass-283160"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated the specified compute endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOperations"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-steep-bush-777093.us-east-2.aws.neon.tech",
                                        "id": "ep-steep-bush-777093",
                                        "project_id": "shiny-wind-028834",
                                        "branch_id": "br-raspy-hill-832856",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "idle",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "last_active": "2022-12-03T15:00:00Z",
                                        "created_at": "2022-12-03T15:37:07Z",
                                        "updated_at": "2022-12-03T15:49:10Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "provisioner": "k8s-pod",
                                        "suspend_timeout_seconds": 10800
                                    },
                                    "operations": [
                                        {
                                            "id": "3fc98ab8-f191-47b8-a427-5eb668ccc5b9",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "apply_config",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "9ffda74b-a582-4cff-b0f0-aaa8d14b8e6a",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "suspend_compute",
                                            "status": "scheduling",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/endpoints/{endpoint_id}/start": {
            "post": {
                "summary": "Start a compute endpoint",
                "description": "Starts a compute endpoint. The compute endpoint is ready to use\nafter the last operation in chain finishes successfully.\n\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain an `endpoint_id` by listing your project's compute endpoints.\nAn `endpoint_id` has an `ep-` prefix.\nFor information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "startProjectEndpoint",
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The Neon project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint_id",
                        "in": "path",
                        "description": "The endpoint ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started the specified compute endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOperations"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-steep-bush-777093.us-east-2.aws.neon.tech",
                                        "id": "ep-steep-bush-777093",
                                        "project_id": "shiny-wind-028834",
                                        "branch_id": "br-raspy-hill-832856",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "idle",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "last_active": "2022-12-03T15:00:00Z",
                                        "created_at": "2022-12-03T15:37:07Z",
                                        "updated_at": "2022-12-03T15:49:10Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "provisioner": "k8s-pod",
                                        "suspend_timeout_seconds": 10800
                                    },
                                    "operations": [
                                        {
                                            "id": "e061087e-3c99-4856-b9c8-6b7751a253af",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "start_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/endpoints/{endpoint_id}/suspend": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "endpoint_id",
                    "in": "path",
                    "description": "The endpoint ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Suspend a compute endpoint",
                "description": "Suspend the specified compute endpoint\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain an `endpoint_id` by listing your project's compute endpoints.\nAn `endpoint_id` has an `ep-` prefix.\nFor information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "suspendProjectEndpoint",
                "responses": {
                    "200": {
                        "description": "Suspended the specified endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOperations"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-steep-bush-777093.us-east-2.aws.neon.tech",
                                        "id": "ep-steep-bush-777093",
                                        "project_id": "shiny-wind-028834",
                                        "branch_id": "br-raspy-hill-832856",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "idle",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "last_active": "2022-12-03T15:00:00Z",
                                        "created_at": "2022-12-03T15:37:07Z",
                                        "updated_at": "2022-12-03T15:49:10Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "provisioner": "k8s-pod",
                                        "suspend_timeout_seconds": 10800
                                    },
                                    "operations": [
                                        {
                                            "id": "e061087e-3c99-4856-b9c8-6b7751a253af",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "suspend_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/projects/{project_id}/endpoints/{endpoint_id}/restart": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "description": "The Neon project ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "endpoint_id",
                    "in": "path",
                    "description": "The endpoint ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Restart a compute endpoint",
                "description": "Restart the specified compute endpoint: suspend immediately followed by start operations.\nYou can obtain a `project_id` by listing the projects for your Neon account.\nYou can obtain an `endpoint_id` by listing your project's compute endpoints.\nAn `endpoint_id` has an `ep-` prefix.\nFor information about compute endpoints, see [Manage computes](https://neon.tech/docs/manage/endpoints/).\n",
                "tags": [
                    "Endpoint"
                ],
                "operationId": "restartProjectEndpoint",
                "responses": {
                    "200": {
                        "description": "Restarted endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOperations"
                                },
                                "example": {
                                    "endpoint": {
                                        "host": "ep-steep-bush-777093.us-east-2.aws.neon.tech",
                                        "id": "ep-steep-bush-777093",
                                        "project_id": "shiny-wind-028834",
                                        "branch_id": "br-raspy-hill-832856",
                                        "autoscaling_limit_min_cu": 1,
                                        "autoscaling_limit_max_cu": 1,
                                        "region_id": "aws-us-east-2",
                                        "type": "read_write",
                                        "current_state": "idle",
                                        "settings": {
                                            "pg_settings": {}
                                        },
                                        "pooler_enabled": false,
                                        "pooler_mode": "transaction",
                                        "disabled": false,
                                        "passwordless_access": true,
                                        "last_active": "2022-12-03T15:00:00Z",
                                        "created_at": "2022-12-03T15:37:07Z",
                                        "updated_at": "2022-12-03T15:49:10Z",
                                        "proxy_host": "us-east-2.aws.neon.tech",
                                        "creation_source": "console",
                                        "provisioner": "k8s-pod",
                                        "suspend_timeout_seconds": 10800
                                    },
                                    "operations": [
                                        {
                                            "id": "e061087e-3c99-4856-b9c8-6b7751a253af",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "suspend_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        },
                                        {
                                            "id": "e061087e-3c99-4856-b9c8-6b7751a253af",
                                            "project_id": "bitter-meadow-966132",
                                            "branch_id": "br-proud-paper-090813",
                                            "endpoint_id": "ep-shrill-thunder-454069",
                                            "action": "start_compute",
                                            "status": "running",
                                            "failures_count": 0,
                                            "created_at": "2022-12-03T15:51:06Z",
                                            "updated_at": "2022-12-03T15:51:06Z",
                                            "total_duration_ms": 100
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/consumption_history/account": {
            "get": {
                "summary": "Get account consumption metrics",
                "description": "Retrieves consumption metrics for Scale plan accounts. History begins at the time of upgrade.\nAvailable for Scale plan users only.\n",
                "tags": [
                    "Consumption"
                ],
                "operationId": "getConsumptionHistoryPerAccount",
                "parameters": [
                    {
                        "name": "from",
                        "description": "Specify the start `date-time` for the consumption period.\nThe `date-time` value is rounded according to the specified `granularity`.\nFor example, `2024-03-15T15:30:00Z` for `daily` granularity will be rounded to `2024-03-15T00:00:00Z`.\nThe specified `date-time` value must respect the specified granularity:\n- For `hourly`, consumption metrics are limited to the last 168 hours.\n- For `daily`, consumption metrics are limited to the last 60 days.\n- For `monthly`, consumption metrics are limited to the past year.\n\nThe consumption history is available starting from `March 1, 2024, at 00:00:00 UTC`.\n",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "required": true
                    },
                    {
                        "name": "to",
                        "description": "Specify the end `date-time` for the consumption period.\nThe `date-time` value is rounded according to the specified granularity.\nFor example, `2024-03-15T15:30:00Z` for `daily` granularity will be rounded to `2024-03-15T00:00:00Z`.\nThe specified `date-time` value must respect the specified granularity:\n- For `hourly`, consumption metrics are limited to the last 168 hours.\n- For `daily`, consumption metrics are limited to the last 60 days.\n- For `monthly`, consumption metrics are limited to the past year.\n",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "required": true
                    },
                    {
                        "name": "granularity",
                        "description": "Specify the granularity of consumption metrics.\nHourly, daily, and monthly metrics are available for the last 168 hours, 60 days,\nand 1 year, respectively.\n",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ConsumptionHistoryGranularity"
                        },
                        "required": true
                    },
                    {
                        "name": "org_id",
                        "description": "Specify the organization for which the consumption metrics should be returned.\nIf this parameter is not provided, the endpoint will return the metrics for the\nauthenticated user's account.\n",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_v1_metrics",
                        "description": "Include metrics utilized in previous pricing models.\n- **data_storage_bytes_hour**: The sum of the maximum observed storage values for each hour\n  for each project, which never decreases.\n",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned consumption metrics for the Neon account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsumptionHistoryPerAccountResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "This endpoint is not available. It is only supported with Scale plan accounts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account is not a member of the organization specified by `org_id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "The specified `date-time` range is outside the boundaries of the specified `granularity`.\nAdjust your `from` and `to` values or select a different `granularity`.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/consumption_history/projects": {
            "get": {
                "summary": "Get consumption metrics for each project",
                "description": "Retrieves consumption metrics for Scale plan projects. History begins at the time of upgrade.\nAvailable for Scale plan users only.\n",
                "tags": [
                    "Consumption"
                ],
                "operationId": "getConsumptionHistoryPerProject",
                "parameters": [
                    {
                        "name": "cursor",
                        "description": "Specify the cursor value from the previous response to get the next batch of projects.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Specify a value from 1 to 100 to limit number of projects in the response.",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "project_ids",
                        "description": "Specify a list of project IDs to filter the response.\nIf omitted, the response will contain all projects.\n",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 0,
                            "maxItems": 100
                        }
                    },
                    {
                        "name": "from",
                        "description": "Specify the start `date-time` for the consumption period.\nThe `date-time` value is rounded according to the specified `granularity`.\nFor example, `2024-03-15T15:30:00Z` for `daily` granularity will be rounded to `2024-03-15T00:00:00Z`.\nThe specified `date-time` value must respect the specified `granularity`:\n- For `hourly`, consumption metrics are limited to the last 168 hours.\n- For `daily`, consumption metrics are limited to the last 60 days.\n- For `monthly`, consumption metrics are limited to the last year.\n\nThe consumption history is available starting from `March 1, 2024, at 00:00:00 UTC`.\n",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "required": true
                    },
                    {
                        "name": "to",
                        "description": "Specify the end `date-time` for the consumption period.\nThe `date-time` value is rounded according to the specified granularity.\nFor example, `2024-03-15T15:30:00Z` for `daily` granularity will be rounded to `2024-03-15T00:00:00Z`.\nThe specified `date-time` value must respect the specified `granularity`:\n- For `hourly`, consumption metrics are limited to the last 168 hours.\n- For `daily`, consumption metrics are limited to the last 60 days.\n- For `monthly`, consumption metrics are limited to the last year.\n",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "required": true
                    },
                    {
                        "name": "granularity",
                        "description": "Specify the granularity of consumption metrics.\nHourly, daily, and monthly metrics are available for the last 168 hours, 60 days,\nand 1 year, respectively.\n",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ConsumptionHistoryGranularity"
                        },
                        "required": true
                    },
                    {
                        "name": "org_id",
                        "description": "Specify the organization for which the project consumption metrics should be returned.\nIf this parameter is not provided, the endpoint will return the metrics for the\nauthenticated user's projects.\n",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_v1_metrics",
                        "description": "Include metrics utilized in previous pricing models.\n- **data_storage_bytes_hour**: The sum of the maximum observed storage values for each hour,\n  which never decreases.\n",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned project consumption metrics for the Neon account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ConsumptionHistoryPerProjectResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "This endpoint is not available. It is only supported with Scale plan accounts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account is not a member of the organization specified by `org_id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "The specified `date-time` range is outside the boundaries of the specified `granularity`.\nAdjust your `from` and `to` values or select a different `granularity`.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/consumption/projects": {
            "get": {
                "summary": "Get project consumption metrics",
                "description": "Retrieves consumption metrics for each project for the current billing period.\nFor usage information, see [Retrieving metrics for all projects](https://neon.tech/docs/guides/partner-billing#retrieving-metrics-for-all-projects).\n",
                "tags": [
                    "Consumption"
                ],
                "operationId": "listProjectsConsumption",
                "parameters": [
                    {
                        "name": "cursor",
                        "description": "Specify the cursor value from the previous response to get the next batch of projects",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Specify a value from 1 to 1000 to limit number of projects in the response",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "maximum": 1000
                        }
                    },
                    {
                        "name": "from",
                        "description": "Specify the start date-time for the consumption period.\nThe time value must be provided in ISO 8601 format.\nIf `from` or `to` is not specified, we return only current consumption period.\n",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "description": "Specify the end date-time period for the consumption period.\nThe time value must be provided in ISO 8601 format.\nIf `from` or `to` is not specified, only the current consumption period is returned.\n",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "org_id",
                        "description": "Specify the organization for which the project consumption metrics should be returned.\nIf this parameter is not provided, the endpoint will return the metrics for the authenticated\nuser's projects.\n",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned a list of project consumption metrics for the Neon account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ProjectsConsumptionResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PaginationResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account is not a member of the organization specified by `org_id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralError"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "summary": "Get current user details",
                "description": "Retrieves information about the current Neon user account.\n",
                "tags": [
                    "Users"
                ],
                "operationId": "getCurrentUserInfo",
                "responses": {
                    "200": {
                        "description": "Returned information about the current user\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserInfoResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        },
        "/users/me/organizations": {
            "get": {
                "summary": "Get current user organizations list",
                "description": "Retrieves information about the current Neon user's organizations\n",
                "operationId": "getCurrentUserOrganizations",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Returned information about the current user organizations\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/GeneralError"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "ListOperations": {
                "description": "Returned a list of operations\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/OperationsResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/PaginationResponse"
                                }
                            ]
                        }
                    }
                }
            },
            "CreatedProject": {
                "description": "Created a project.\nThe project includes a connection URI with a database, password, and role.\nAt least one non-protected role is created with a password.\nWait until the operations are finished before attempting to connect to a project database.\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/ConnectionURIsResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/RolesResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/DatabasesResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/OperationsResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/BranchResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/EndpointsResponse"
                                }
                            ]
                        }
                    }
                }
            },
            "CreatedBranch": {
                "description": "Created a branch. An endpoint is only created if it was specified in the request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/BranchResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/EndpointsResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/OperationsResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/RolesResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/DatabasesResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/ConnectionURIsOptionalResponse"
                                }
                            ]
                        }
                    }
                }
            },
            "GeneralError": {
                "description": "General Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GeneralError"
                        }
                    }
                }
            },
            "HealthCheck": {
                "description": "Service is running",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/HealthCheck"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "The Neon API requires an API key to authorize your requests, which you can enter below.\nRefer to our documentation to find out how to generate and use [API keys](https://neon.tech/docs/manage/api-keys).\n"
            },
            "CookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "zenith"
            }
        },
        "schemas": {
            "Features": {
                "type": "object",
                "additionalProperties": {
                    "type": "boolean"
                }
            },
            "ComputeUnit": {
                "type": "number",
                "minimum": 0.25
            },
            "Provisioner": {
                "type": "string",
                "description": "The Neon compute provisioner.\nSpecify the `k8s-neonvm` provisioner to create a compute endpoint that supports Autoscaling.\n",
                "enum": [
                    "k8s-pod",
                    "k8s-neonvm"
                ]
            },
            "PaginationResponse": {
                "type": "object",
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    }
                }
            },
            "Pagination": {
                "description": "Cursor based pagination is used. The user must pass the cursor as is to the backend.\nFor more information about cursor based pagination, see\nhttps://learn.microsoft.com/en-us/ef/core/querying/pagination#keyset-pagination\n",
                "type": "object",
                "required": [
                    "cursor",
                    "limit"
                ],
                "properties": {
                    "cursor": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "example": {
                    "cursor": "2022-12-07T00:45:05.262011Z"
                }
            },
            "EmptyResponse": {
                "type": "object",
                "description": "Empty response.",
                "properties": {}
            },
            "ApiKeyCreateRequest": {
                "type": "object",
                "required": [
                    "key_name"
                ],
                "properties": {
                    "key_name": {
                        "type": "string",
                        "description": "A user-specified API key name. This value is required when creating an API key."
                    }
                }
            },
            "ApiKeyCreateResponse": {
                "type": "object",
                "required": [
                    "key",
                    "id",
                    "name",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "The API key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "key": {
                        "description": "The generated 64-bit token required to access the Neon API",
                        "type": "string"
                    },
                    "name": {
                        "description": "The user-specified API key name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the API key was created",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ApiKeyRevokeResponse": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "revoked",
                    "last_used_from_addr"
                ],
                "properties": {
                    "id": {
                        "description": "The API key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "The user-specified API key name",
                        "type": "string"
                    },
                    "revoked": {
                        "description": "A `true` or `false` value indicating whether the API key is revoked",
                        "type": "boolean"
                    },
                    "last_used_at": {
                        "description": "A timestamp indicating when the API was last used",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_used_from_addr": {
                        "description": "The IP address from which the API key was last used",
                        "type": "string"
                    }
                }
            },
            "ApiKeysListResponseItem": {
                "type": "object",
                "required": [
                    "last_used_from_addr",
                    "id",
                    "name",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "The API key ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "The user-specified API key name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the API key was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_used_at": {
                        "description": "A timestamp indicating when the API was last used",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_used_from_addr": {
                        "description": "The IP address from which the API key was last used",
                        "type": "string"
                    }
                }
            },
            "Operation": {
                "type": "object",
                "required": [
                    "id",
                    "project_id",
                    "action",
                    "status",
                    "failures_count",
                    "created_at",
                    "updated_at",
                    "total_duration_ms"
                ],
                "properties": {
                    "id": {
                        "description": "The operation ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "description": "The Neon project ID",
                        "type": "string"
                    },
                    "branch_id": {
                        "description": "The branch ID",
                        "type": "string"
                    },
                    "endpoint_id": {
                        "description": "The endpoint ID",
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/OperationAction"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OperationStatus"
                    },
                    "error": {
                        "description": "The error that occured",
                        "type": "string"
                    },
                    "failures_count": {
                        "description": "The number of times the operation failed",
                        "type": "integer",
                        "format": "int32"
                    },
                    "retry_at": {
                        "description": "A timestamp indicating when the operation was last retried",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the operation was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the operation status was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "total_duration_ms": {
                        "description": "The total duration of the operation in milliseconds",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "example": [
                    {
                        "id": "a07f8772-1877-4da9-a939-3a3ae62d1d8d",
                        "project_id": "spring-example-302709",
                        "branch_id": "br-wispy-meadow-118737",
                        "endpoint_id": "ep-silent-smoke-806639",
                        "action": "create_branch",
                        "status": "running",
                        "failures_count": 0,
                        "created_at": "2022-11-08T23:33:16Z",
                        "updated_at": "2022-11-08T23:33:20Z",
                        "total_duration_ms": 400
                    },
                    {
                        "id": "d8ac46eb-a757-42b1-9907-f78322ee394e",
                        "project_id": "spring-example-302709",
                        "branch_id": "br-wispy-meadow-118737",
                        "endpoint_id": "ep-silent-smoke-806639",
                        "action": "start_compute",
                        "status": "finished",
                        "failures_count": 0,
                        "created_at": "2022-11-15T20:02:00Z",
                        "updated_at": "2022-11-15T20:02:02Z",
                        "total_duration_ms": 200
                    }
                ]
            },
            "OperationResponse": {
                "type": "object",
                "required": [
                    "operation"
                ],
                "properties": {
                    "operation": {
                        "$ref": "#/components/schemas/Operation"
                    }
                }
            },
            "OperationsResponse": {
                "type": "object",
                "required": [
                    "operations"
                ],
                "properties": {
                    "operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Operation"
                        }
                    }
                }
            },
            "OperationAction": {
                "description": "The action performed by the operation",
                "type": "string",
                "enum": [
                    "create_compute",
                    "create_timeline",
                    "start_compute",
                    "suspend_compute",
                    "apply_config",
                    "check_availability",
                    "delete_timeline",
                    "create_branch",
                    "tenant_ignore",
                    "tenant_attach",
                    "tenant_detach",
                    "tenant_reattach",
                    "replace_safekeeper",
                    "disable_maintenance",
                    "apply_storage_config",
                    "prepare_secondary_pageserver",
                    "switch_pageserver"
                ]
            },
            "OperationStatus": {
                "description": "The status of the operation",
                "type": "string",
                "enum": [
                    "scheduling",
                    "running",
                    "finished",
                    "failed",
                    "error",
                    "cancelling",
                    "cancelled",
                    "skipped"
                ]
            },
            "ProjectListItem": {
                "description": "Essential data about the project. Full data is available at the getProject endpoint.\n",
                "type": "object",
                "required": [
                    "active_time",
                    "id",
                    "platform_id",
                    "region_id",
                    "name",
                    "pg_version",
                    "proxy_host",
                    "branch_logical_size_limit",
                    "branch_logical_size_limit_bytes",
                    "provisioner",
                    "store_passwords",
                    "cpu_used_sec",
                    "creation_source",
                    "created_at",
                    "updated_at",
                    "owner_id"
                ],
                "properties": {
                    "id": {
                        "description": "The project ID\n",
                        "type": "string"
                    },
                    "platform_id": {
                        "description": "The cloud platform identifier. Currently, only AWS is supported, for which the identifier is `aws`.\n",
                        "type": "string"
                    },
                    "region_id": {
                        "description": "The region identifier\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The project name\n",
                        "type": "string"
                    },
                    "provisioner": {
                        "$ref": "#/components/schemas/Provisioner"
                    },
                    "default_endpoint_settings": {
                        "$ref": "#/components/schemas/DefaultEndpointSettings"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/ProjectSettingsData"
                    },
                    "pg_version": {
                        "$ref": "#/components/schemas/PgVersion"
                    },
                    "proxy_host": {
                        "description": "The proxy host for the project. This value combines the `region_id`, the `platform_id`, and the Neon domain (`neon.tech`).\n",
                        "type": "string"
                    },
                    "branch_logical_size_limit": {
                        "description": "The logical size limit for a branch. The value is in MiB.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "branch_logical_size_limit_bytes": {
                        "description": "The logical size limit for a branch. The value is in B.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "store_passwords": {
                        "description": "Whether or not passwords are stored for roles in the Neon project. Storing passwords facilitates access to Neon features that require authorization.\n",
                        "type": "boolean"
                    },
                    "active_time": {
                        "description": "Control plane observed endpoints of this project being active this amount of wall-clock time.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "cpu_used_sec": {
                        "deprecated": true,
                        "description": "DEPRECATED. Use data from the getProject endpoint instead.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "maintenance_starts_at": {
                        "description": "A timestamp indicating when project maintenance begins. If set, the project is placed into maintenance mode at this time.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creation_source": {
                        "description": "The project creation source\n",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the project was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the project was last updated\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "synthetic_storage_size": {
                        "description": "The current space occupied by the project in storage, in bytes. Synthetic storage size combines the logical data size and Write-Ahead Log (WAL) size for all branches in a project.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "quota_reset_at": {
                        "deprecated": true,
                        "description": "DEPRECATED. Use `consumption_period_end` from the getProject endpoint instead.\nA timestamp indicating when the project quota resets\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "compute_last_active_at": {
                        "description": "The most recent time when any endpoint of this project was active.\n\nOmitted when observed no actitivy for endpoints of this project.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "org_id": {
                        "type": "string",
                        "description": "Organization id if a project belongs to organization.\nPermissions for the project will be given to organization members as defined by the organization admins.\nThe permissions of the project do not depend on the user that created the project if a project belongs to an organization.\n"
                    }
                },
                "example": {
                    "id": "spring-example-302709",
                    "platform_id": "aws",
                    "region_id": "aws-us-east-2",
                    "name": "spring-example-302709",
                    "provisioner": "k8s-pod",
                    "pg_version": 15,
                    "proxy_host": "us-east-2.aws.neon.tech",
                    "store_passwords": true,
                    "creation_source": "console",
                    "created_at": "2022-12-13T01:30:55Z",
                    "updated_at": "2022-12-13T01:30:55Z"
                }
            },
            "Project": {
                "type": "object",
                "required": [
                    "consumption_period_end",
                    "consumption_period_start",
                    "active_time_seconds",
                    "compute_time_seconds",
                    "written_data_bytes",
                    "data_transfer_bytes",
                    "data_storage_bytes_hour",
                    "id",
                    "platform_id",
                    "region_id",
                    "name",
                    "pg_version",
                    "proxy_host",
                    "branch_logical_size_limit",
                    "branch_logical_size_limit_bytes",
                    "store_passwords",
                    "cpu_used_sec",
                    "provisioner",
                    "creation_source",
                    "history_retention_seconds",
                    "created_at",
                    "updated_at",
                    "owner_id"
                ],
                "properties": {
                    "data_storage_bytes_hour": {
                        "description": "Bytes-Hour. Project consumed that much storage hourly during the billing period. The value has some lag.\nThe value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "data_transfer_bytes": {
                        "description": "Bytes. Egress traffic from the Neon cloud to the client for given project over the billing period.\nIncludes deleted endpoints. The value has some lag. The value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "written_data_bytes": {
                        "description": "Bytes. Amount of WAL that travelled through storage for given project across all branches.\nThe value has some lag. The value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "compute_time_seconds": {
                        "description": "Seconds. The number of CPU seconds used by the project's compute endpoints, including compute endpoints that have been deleted.\nThe value has some lag. The value is reset at the beginning of each billing period.\nExamples:\n1. An endpoint that uses 1 CPU for 1 second is equal to `compute_time=1`.\n2. An endpoint that uses 2 CPUs simultaneously for 1 second is equal to `compute_time=2`.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "active_time_seconds": {
                        "description": "Seconds. Control plane observed endpoints of this project being active this amount of wall-clock time.\nThe value has some lag.\nThe value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "cpu_used_sec": {
                        "description": "DEPRECATED, use compute_time instead.\n",
                        "type": "integer",
                        "format": "int64",
                        "deprecated": true
                    },
                    "id": {
                        "description": "The project ID\n",
                        "type": "string"
                    },
                    "platform_id": {
                        "description": "The cloud platform identifier. Currently, only AWS is supported, for which the identifier is `aws`.\n",
                        "type": "string"
                    },
                    "region_id": {
                        "description": "The region identifier\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The project name\n",
                        "type": "string"
                    },
                    "provisioner": {
                        "$ref": "#/components/schemas/Provisioner"
                    },
                    "default_endpoint_settings": {
                        "$ref": "#/components/schemas/DefaultEndpointSettings"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/ProjectSettingsData"
                    },
                    "pg_version": {
                        "$ref": "#/components/schemas/PgVersion"
                    },
                    "proxy_host": {
                        "description": "The proxy host for the project. This value combines the `region_id`, the `platform_id`, and the Neon domain (`neon.tech`).\n",
                        "type": "string"
                    },
                    "branch_logical_size_limit": {
                        "description": "The logical size limit for a branch. The value is in MiB.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "branch_logical_size_limit_bytes": {
                        "description": "The logical size limit for a branch. The value is in B.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "store_passwords": {
                        "description": "Whether or not passwords are stored for roles in the Neon project. Storing passwords facilitates access to Neon features that require authorization.\n",
                        "type": "boolean"
                    },
                    "maintenance_starts_at": {
                        "description": "A timestamp indicating when project maintenance begins. If set, the project is placed into maintenance mode at this time.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creation_source": {
                        "description": "The project creation source\n",
                        "type": "string"
                    },
                    "history_retention_seconds": {
                        "description": "The number of seconds to retain point-in-time restore (PITR) backup history for this project.\n",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the project was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the project was last updated\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "synthetic_storage_size": {
                        "description": "The current space occupied by the project in storage, in bytes. Synthetic storage size combines the logical data size and Write-Ahead Log (WAL) size for all branches in a project.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "consumption_period_start": {
                        "description": "A date-time indicating when Neon Cloud started measuring consumption for current consumption period.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "consumption_period_end": {
                        "description": "A date-time indicating when Neon Cloud plans to stop measuring consumption for current consumption period.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "quota_reset_at": {
                        "deprecated": true,
                        "description": "DEPRECATED. Use `consumption_period_end` from the getProject endpoint instead.\nA timestamp indicating when the project quota resets.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/ProjectOwnerData"
                    },
                    "compute_last_active_at": {
                        "description": "The most recent time when any endpoint of this project was active.\n\nOmitted when observed no actitivy for endpoints of this project.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "org_id": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "spring-example-302709",
                    "platform_id": "aws",
                    "region_id": "aws-us-east-2",
                    "name": "spring-example-302709",
                    "provisioner": "k8s-pod",
                    "pg_version": 15,
                    "proxy_host": "us-east-2.aws.neon.tech",
                    "store_passwords": true,
                    "creation_source": "console",
                    "history_retention_seconds": 604800,
                    "created_at": "2022-12-13T01:30:55Z",
                    "updated_at": "2022-12-13T01:30:55Z",
                    "owner": {
                        "email": "some@email.com",
                        "branches_limit": 10,
                        "subscription_type": "scale"
                    },
                    "org_id": "org-morning-bread-81040908"
                }
            },
            "ProjectCreateRequest": {
                "type": "object",
                "required": [
                    "project"
                ],
                "properties": {
                    "project": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "$ref": "#/components/schemas/ProjectSettingsData"
                            },
                            "name": {
                                "description": "The project name",
                                "type": "string"
                            },
                            "branch": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "The branch name. If not specified, the default branch name will be used.\n",
                                        "type": "string"
                                    },
                                    "role_name": {
                                        "description": "The role name. If not specified, the default role name will be used.\n",
                                        "type": "string"
                                    },
                                    "database_name": {
                                        "description": "The database name. If not specified, the default database name will be used.\n",
                                        "type": "string"
                                    }
                                }
                            },
                            "autoscaling_limit_min_cu": {
                                "deprecated": true,
                                "description": "DEPRECATED, use default_endpoint_settings.autoscaling_limit_min_cu instead.\n\nThe minimum number of Compute Units. The minimum value is `0.25`.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                                "$ref": "#/components/schemas/ComputeUnit"
                            },
                            "autoscaling_limit_max_cu": {
                                "deprecated": true,
                                "description": "DEPRECATED, use default_endpoint_settings.autoscaling_limit_max_cu instead.\n\nThe maximum number of Compute Units. See [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                                "$ref": "#/components/schemas/ComputeUnit"
                            },
                            "provisioner": {
                                "$ref": "#/components/schemas/Provisioner"
                            },
                            "region_id": {
                                "description": "The region identifier. Refer to our [Regions](https://neon.tech/docs/introduction/regions) documentation for supported regions. Values are specified in this format: `aws-us-east-1`\n",
                                "type": "string"
                            },
                            "default_endpoint_settings": {
                                "$ref": "#/components/schemas/DefaultEndpointSettings"
                            },
                            "pg_version": {
                                "$ref": "#/components/schemas/PgVersion"
                            },
                            "store_passwords": {
                                "description": "Whether or not passwords are stored for roles in the Neon project. Storing passwords facilitates access to Neon features that require authorization.\n",
                                "type": "boolean"
                            },
                            "history_retention_seconds": {
                                "description": "The number of seconds to retain the point-in-time restore (PITR) backup history for this project.\nThe default is 604800 seconds (7 days).\n",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0,
                                "maximum": 2592000
                            },
                            "org_id": {
                                "type": "string",
                                "description": "Organization id in case the project created belongs to an organization.\nIf not present, project is owned by a user and not by org.\n"
                            }
                        }
                    }
                }
            },
            "ProjectUpdateRequest": {
                "type": "object",
                "required": [
                    "project"
                ],
                "properties": {
                    "project": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "$ref": "#/components/schemas/ProjectSettingsData"
                            },
                            "name": {
                                "description": "The project name",
                                "type": "string"
                            },
                            "default_endpoint_settings": {
                                "$ref": "#/components/schemas/DefaultEndpointSettings"
                            },
                            "history_retention_seconds": {
                                "description": "The number of seconds to retain the point-in-time restore (PITR) backup history for this project.\nThe default is 604800 seconds (7 days).\n",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0,
                                "maximum": 2592000
                            }
                        }
                    }
                }
            },
            "ProjectSettingsData": {
                "type": "object",
                "properties": {
                    "quota": {
                        "$ref": "#/components/schemas/ProjectQuota"
                    },
                    "allowed_ips": {
                        "$ref": "#/components/schemas/AllowedIps"
                    },
                    "enable_logical_replication": {
                        "description": "Sets wal_level=logical for all compute endpoints in this project.\nAll active endpoints will be suspended.\nOnce enabled, logical replication cannot be disabled.\n",
                        "type": "boolean"
                    }
                }
            },
            "ProjectResponse": {
                "type": "object",
                "required": [
                    "project"
                ],
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/Project"
                    }
                }
            },
            "ProjectsResponse": {
                "type": "object",
                "required": [
                    "projects"
                ],
                "properties": {
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectListItem"
                        }
                    }
                }
            },
            "ProjectPermission": {
                "type": "object",
                "required": [
                    "id",
                    "granted_to_email",
                    "granted_at"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "granted_to_email": {
                        "type": "string"
                    },
                    "granted_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "revoked_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectPermissions": {
                "type": "object",
                "required": [
                    "project_permissions"
                ],
                "properties": {
                    "project_permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectPermission"
                        }
                    }
                }
            },
            "GrantPermissionToProjectRequest": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    }
                }
            },
            "ConsumptionHistoryPerAccountResponse": {
                "type": "object",
                "properties": {
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionHistoryPerPeriod"
                        }
                    }
                },
                "required": [
                    "periods"
                ]
            },
            "ConsumptionHistoryPerProjectResponse": {
                "type": "object",
                "properties": {
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionHistoryPerProject"
                        }
                    }
                },
                "required": [
                    "projects"
                ]
            },
            "ConsumptionHistoryPerProject": {
                "type": "object",
                "properties": {
                    "project_id": {
                        "type": "string"
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionHistoryPerPeriod"
                        }
                    }
                },
                "required": [
                    "project_id",
                    "periods"
                ]
            },
            "ConsumptionHistoryPerPeriod": {
                "type": "object",
                "properties": {
                    "period_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "consumption": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionHistoryPerTimeframe"
                        }
                    }
                },
                "required": [
                    "period_id",
                    "consumption"
                ],
                "example": {
                    "period_id": "79ec829f-1828-4006-ac82-9f1828a0067d",
                    "consumption": [
                        {
                            "timeframe_start": "2024-03-22T00:00:00Z",
                            "timeframe_end": "2024-03-23T00:00:00Z",
                            "active_time_seconds": 27853,
                            "compute_time_seconds": 18346,
                            "written_data_bytes": 1073741824,
                            "synthetic_storage_size_bytes": 5368709120
                        },
                        {
                            "timeframe_start": "2024-03-23T00:00:00Z",
                            "timeframe_end": "2024-03-24T00:00:00Z",
                            "active_time_seconds": 17498,
                            "compute_time_seconds": 3378,
                            "written_data_bytes": 5741824,
                            "synthetic_storage_size_bytes": 2370912
                        }
                    ]
                }
            },
            "ConsumptionHistoryPerTimeframe": {
                "type": "object",
                "properties": {
                    "timeframe_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "timeframe_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "active_time_seconds": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "compute_time_seconds": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "written_data_bytes": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "synthetic_storage_size_bytes": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "data_storage_bytes_hour": {
                        "type": "integer",
                        "format": "uint64"
                    }
                },
                "required": [
                    "timeframe_start",
                    "timeframe_end",
                    "active_time_seconds",
                    "compute_time_seconds",
                    "written_data_bytes",
                    "synthetic_storage_size_bytes"
                ]
            },
            "ConsumptionHistoryGranularity": {
                "type": "string",
                "enum": [
                    "hourly",
                    "daily",
                    "monthly"
                ]
            },
            "ProjectsConsumptionResponse": {
                "type": "object",
                "required": [
                    "projects",
                    "periods_in_response"
                ],
                "properties": {
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectConsumption"
                        }
                    },
                    "periods_in_response": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ProjectConsumption": {
                "type": "object",
                "required": [
                    "period_id",
                    "previous_period_id",
                    "project_id",
                    "active_time_seconds",
                    "compute_time_seconds",
                    "written_data_bytes",
                    "data_transfer_bytes",
                    "data_storage_bytes_hour",
                    "synthetic_storage_size",
                    "updated_at",
                    "period_start",
                    "period_end"
                ],
                "properties": {
                    "project_id": {
                        "description": "The project ID",
                        "type": "string"
                    },
                    "period_id": {
                        "description": "The Id of the consumption period, used to reference the `previous_period_id` field.\n",
                        "type": "string",
                        "format": "uuid"
                    },
                    "data_storage_bytes_hour": {
                        "description": "Bytes-Hour. The amount of storage the project consumed during the billing period. Expect some lag in the reported value.\nThe value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "data_storage_bytes_hour_updated_at": {
                        "description": "The timestamp of the last update of the `data_storage_bytes_hour` field.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "synthetic_storage_size": {
                        "description": "Bytes. The current space occupied by project in storage. Expect some lag in the reported value.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "synthetic_storage_size_updated_at": {
                        "description": "The timestamp of the last update of the `synthetic_storage_size` field.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "data_transfer_bytes": {
                        "description": "Bytes. The egress traffic from the Neon cloud to the client for the project over the billing period.\nIncludes egress traffic for deleted endpoints. Expect some lag in the reported value. The value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "data_transfer_bytes_updated_at": {
                        "description": "Timestamp of the last update of `data_transfer_bytes` field\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "written_data_bytes": {
                        "description": "Bytes. The Amount of WAL that travelled through storage for given project for all branches.\nExpect some lag in the reported value. The value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "written_data_bytes_updated_at": {
                        "description": "The timestamp of the last update of `written_data_bytes` field.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "compute_time_seconds": {
                        "description": "Seconds. The number of CPU seconds used by the project's compute endpoints, including compute endpoints that have been deleted.\nExpect some lag in the reported value. The value is reset at the beginning of each billing period.\nExamples:\n1. An endpoint that uses 1 CPU for 1 second is equal to `compute_time=1`.\n2. An endpoint that uses 2 CPUs simultaneously for 1 second is equal to `compute_time=2`.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "compute_time_seconds_updated_at": {
                        "description": "The timestamp of the last update of `compute_time_seconds` field.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "active_time_seconds": {
                        "description": "Seconds. The amount of time that compute endpoints in this project have been active.\nExpect some lag in the reported value.\n\nThe value is reset at the beginning of each billing period.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "active_time_seconds_updated_at": {
                        "description": "The timestamp of the last update of the `active_time_seconds` field.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the period was last updated.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "period_start": {
                        "description": "The start of the consumption period.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "period_end": {
                        "description": "The end of the consumption period.\n",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "previous_period_id": {
                        "description": "The `period_id` of the previous consumption period.\n",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                }
            },
            "ProjectLimits": {
                "type": "object",
                "required": [
                    "limits",
                    "features"
                ],
                "properties": {
                    "limits": {
                        "type": "object",
                        "required": [
                            "active_time",
                            "max_projects",
                            "max_branches",
                            "max_protected_branches",
                            "max_autoscaling_cu",
                            "cpu_seconds",
                            "max_compute_time_non_primary",
                            "max_active_endpoints",
                            "max_read_only_endpoints",
                            "max_allowed_ips",
                            "max_monitoring_retention_hours",
                            "max_history_retention_seconds",
                            "min_autosuspend_seconds",
                            "max_data_transfer"
                        ],
                        "properties": {
                            "active_time": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "max_projects": {
                                "type": "integer"
                            },
                            "max_branches": {
                                "type": "integer"
                            },
                            "max_protected_branches": {
                                "type": "integer"
                            },
                            "max_autoscaling_cu": {
                                "type": "number",
                                "format": "float64"
                            },
                            "cpu_seconds": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "max_compute_time_non_primary": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "max_active_endpoints": {
                                "type": "integer"
                            },
                            "max_read_only_endpoints": {
                                "type": "integer"
                            },
                            "max_allowed_ips": {
                                "type": "integer"
                            },
                            "max_monitoring_retention_hours": {
                                "type": "integer"
                            },
                            "max_history_retention_seconds": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "min_autosuspend_seconds": {
                                "type": "integer"
                            },
                            "max_data_transfer": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "features": {
                        "$ref": "#/components/schemas/Features"
                    }
                }
            },
            "Branch": {
                "type": "object",
                "required": [
                    "id",
                    "project_id",
                    "name",
                    "current_state",
                    "creation_source",
                    "created_at",
                    "updated_at",
                    "primary",
                    "default",
                    "protected",
                    "cpu_used_sec",
                    "active_time_seconds",
                    "compute_time_seconds",
                    "written_data_bytes",
                    "data_transfer_bytes"
                ],
                "properties": {
                    "id": {
                        "description": "The branch ID. This value is generated when a branch is created. A `branch_id` value has a `br` prefix. For example: `br-small-term-683261`.\n",
                        "type": "string"
                    },
                    "project_id": {
                        "description": "The ID of the project to which the branch belongs\n",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "The `branch_id` of the parent branch\n",
                        "type": "string"
                    },
                    "parent_lsn": {
                        "description": "The Log Sequence Number (LSN) on the parent branch from which this branch was created\n",
                        "type": "string"
                    },
                    "parent_timestamp": {
                        "description": "The point in time on the parent branch from which this branch was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "description": "The branch name\n",
                        "type": "string"
                    },
                    "current_state": {
                        "$ref": "#/components/schemas/BranchState"
                    },
                    "pending_state": {
                        "$ref": "#/components/schemas/BranchState"
                    },
                    "logical_size": {
                        "description": "The logical size of the branch, in bytes\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "creation_source": {
                        "description": "The branch creation source\n",
                        "type": "string"
                    },
                    "primary": {
                        "deprecated": true,
                        "description": "DEPRECATED. Use `default` field.\nWhether the branch is the project's primary branch\n",
                        "type": "boolean"
                    },
                    "default": {
                        "description": "Whether the branch is the project's default branch\n",
                        "type": "boolean"
                    },
                    "protected": {
                        "description": "Whether the branch is protected\n",
                        "type": "boolean"
                    },
                    "cpu_used_sec": {
                        "deprecated": true,
                        "description": "CPU seconds used by all of the branch's compute endpoints, including deleted ones.\nThis value is reset at the beginning of each billing period.\nExamples:\n1. A branch that uses 1 CPU for 1 second is equal to `cpu_used_sec=1`.\n2. A branch that uses 2 CPUs simultaneously for 1 second is equal to `cpu_used_sec=2`.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "compute_time_seconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "active_time_seconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "written_data_bytes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "data_transfer_bytes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the branch was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the branch was last updated\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_reset_at": {
                        "description": "A timestamp indicating when the branch was last reset\n",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "example": {
                    "id": "br-wispy-meadow-118737",
                    "project_id": "spring-example-302709",
                    "parent_id": "br-aged-salad-637688",
                    "parent_lsn": "0/1DE2850",
                    "name": "dev2",
                    "protected": false,
                    "current_state": "ready",
                    "creation_source": "console",
                    "created_at": "2022-11-30T19:09:48Z",
                    "updated_at": "2022-12-01T19:53:05Z",
                    "primary": true,
                    "default": true
                }
            },
            "BranchState": {
                "description": "The branch state",
                "type": "string",
                "enum": [
                    "init",
                    "ready"
                ]
            },
            "BranchCreateRequestEndpointOptions": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/EndpointType"
                    },
                    "autoscaling_limit_min_cu": {
                        "description": "The minimum number of Compute Units. The minimum value is `0.25`.\n    See [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\n    for more information.\n",
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "autoscaling_limit_max_cu": {
                        "description": "The maximum number of Compute Units.\n    See [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\n    for more information.\n",
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "provisioner": {
                        "$ref": "#/components/schemas/Provisioner"
                    },
                    "suspend_timeout_seconds": {
                        "$ref": "#/components/schemas/SuspendTimeoutSeconds"
                    }
                }
            },
            "BranchCreateRequest": {
                "type": "object",
                "properties": {
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BranchCreateRequestEndpointOptions"
                        }
                    },
                    "branch": {
                        "type": "object",
                        "properties": {
                            "parent_id": {
                                "description": "The `branch_id` of the parent branch. If omitted or empty, the branch will be created from the project's default branch.\n",
                                "type": "string"
                            },
                            "name": {
                                "description": "The branch name\n",
                                "type": "string"
                            },
                            "parent_lsn": {
                                "description": "A Log Sequence Number (LSN) on the parent branch. The branch will be created with data from this LSN.\n",
                                "type": "string"
                            },
                            "parent_timestamp": {
                                "description": "A timestamp identifying a point in time on the parent branch. The branch will be created with data starting from this point in time.\nThe timestamp must be provided in ISO 8601 format; for example: `2024-02-26T12:00:00Z`.\n",
                                "type": "string",
                                "format": "date-time"
                            },
                            "protected": {
                                "description": "Whether the branch is protected\n",
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "BranchUpdateRequest": {
                "type": "object",
                "required": [
                    "branch"
                ],
                "properties": {
                    "branch": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "protected": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "BranchRestoreRequest": {
                "type": "object",
                "required": [
                    "source_branch_id"
                ],
                "properties": {
                    "source_branch_id": {
                        "type": "string",
                        "description": "The `branch_id` of the restore source branch.\nIf `source_timestamp` and `source_lsn` are omitted, the branch will be restored to head.\nIf `source_branch_id` is equal to the branch's id, `source_timestamp` or `source_lsn` is required.\n"
                    },
                    "source_lsn": {
                        "description": "A Log Sequence Number (LSN) on the source branch. The branch will be restored with data from this LSN.\n",
                        "type": "string"
                    },
                    "source_timestamp": {
                        "description": "A timestamp identifying a point in time on the source branch. The branch will be restored with data starting from this point in time.\nThe timestamp must be provided in ISO 8601 format; for example: `2024-02-26T12:00:00Z`.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "preserve_under_name": {
                        "description": "If not empty, the previous state of the branch will be saved to a branch with this name.\nIf the branch has children or the `source_branch_id` is equal to the branch id, this field is required. All existing child branches will be moved to the newly created branch under the name `preserve_under_name`.\n",
                        "type": "string"
                    }
                }
            },
            "BranchResponse": {
                "type": "object",
                "required": [
                    "branch"
                ],
                "properties": {
                    "branch": {
                        "$ref": "#/components/schemas/Branch"
                    }
                }
            },
            "BranchSchemaResponse": {
                "type": "object",
                "properties": {
                    "sql": {
                        "type": "string"
                    }
                }
            },
            "BranchesResponse": {
                "type": "object",
                "required": [
                    "branches"
                ],
                "properties": {
                    "branches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Branch"
                        }
                    }
                }
            },
            "ConnectionParameters": {
                "type": "object",
                "required": [
                    "database",
                    "password",
                    "role",
                    "host",
                    "pooler_host"
                ],
                "properties": {
                    "database": {
                        "description": "Database name\n",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password for the role\n",
                        "type": "string"
                    },
                    "role": {
                        "description": "Role name\n",
                        "type": "string"
                    },
                    "host": {
                        "description": "Hostname\n",
                        "type": "string"
                    },
                    "pooler_host": {
                        "description": "Pooler hostname\n",
                        "type": "string"
                    }
                }
            },
            "ConnectionDetails": {
                "type": "object",
                "required": [
                    "connection_uri",
                    "connection_parameters"
                ],
                "properties": {
                    "connection_uri": {
                        "description": "The connection URI is defined as specified here: [Connection URIs](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING-URIS)\nThe connection URI can be used to connect to a Postgres database with psql or defined in a DATABASE_URL environment variable.\n",
                        "type": "string"
                    },
                    "connection_parameters": {
                        "$ref": "#/components/schemas/ConnectionParameters"
                    }
                }
            },
            "ConnectionURIResponse": {
                "type": "object",
                "required": [
                    "uri"
                ],
                "properties": {
                    "uri": {
                        "description": "The connection URI.\n",
                        "type": "string"
                    }
                }
            },
            "Endpoint": {
                "type": "object",
                "required": [
                    "host",
                    "id",
                    "project_id",
                    "branch_id",
                    "region_id",
                    "autoscaling_limit_max_cu",
                    "autoscaling_limit_min_cu",
                    "type",
                    "current_state",
                    "pooler_enabled",
                    "pooler_mode",
                    "disabled",
                    "passwordless_access",
                    "creation_source",
                    "created_at",
                    "updated_at",
                    "settings",
                    "proxy_host",
                    "suspend_timeout_seconds",
                    "provisioner"
                ],
                "properties": {
                    "host": {
                        "description": "The hostname of the compute endpoint. This is the hostname specified when connecting to a Neon database.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The compute endpoint ID. Compute endpoint IDs have an `ep-` prefix. For example: `ep-little-smoke-851426`\n",
                        "type": "string"
                    },
                    "project_id": {
                        "description": "The ID of the project to which the compute endpoint belongs\n",
                        "type": "string"
                    },
                    "branch_id": {
                        "description": "The ID of the branch that the compute endpoint is associated with\n",
                        "type": "string"
                    },
                    "autoscaling_limit_min_cu": {
                        "description": "The minimum number of Compute Units\n",
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "autoscaling_limit_max_cu": {
                        "description": "The maximum number of Compute Units\n",
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "region_id": {
                        "type": "string",
                        "description": "The region identifier\n"
                    },
                    "type": {
                        "$ref": "#/components/schemas/EndpointType"
                    },
                    "current_state": {
                        "$ref": "#/components/schemas/EndpointState"
                    },
                    "pending_state": {
                        "$ref": "#/components/schemas/EndpointState"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/EndpointSettingsData"
                    },
                    "pooler_enabled": {
                        "description": "Whether connection pooling is enabled for the compute endpoint\n",
                        "type": "boolean"
                    },
                    "pooler_mode": {
                        "$ref": "#/components/schemas/EndpointPoolerMode"
                    },
                    "disabled": {
                        "description": "Whether to restrict connections to the compute endpoint.\nEnabling this option schedules a suspend compute operation.\nA disabled compute endpoint cannot be enabled by a connection or\nconsole action. However, the compute endpoint is periodically\nenabled by check_availability operations.\n",
                        "type": "boolean"
                    },
                    "passwordless_access": {
                        "description": "Whether to permit passwordless access to the compute endpoint\n",
                        "type": "boolean"
                    },
                    "last_active": {
                        "description": "A timestamp indicating when the compute endpoint was last active\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creation_source": {
                        "description": "The compute endpoint creation source\n",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the compute endpoint was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the compute endpoint was last updated\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "proxy_host": {
                        "description": "DEPRECATED. Use the \"host\" property instead.\n",
                        "type": "string"
                    },
                    "suspend_timeout_seconds": {
                        "$ref": "#/components/schemas/SuspendTimeoutSeconds"
                    },
                    "provisioner": {
                        "$ref": "#/components/schemas/Provisioner"
                    },
                    "compute_release_version": {
                        "description": "Attached compute's release version number.\n",
                        "type": "string"
                    }
                },
                "example": {
                    "host": "ep-silent-smoke-806639.us-east-2.aws.neon.tech",
                    "id": "ep-silent-smoke-806639",
                    "project_id": "spring-example-302709",
                    "branch_id": "br-wispy-meadow-118737",
                    "autoscaling_limit_min_cu": 1,
                    "autoscaling_limit_max_cu": 1,
                    "region_id": "aws-us-east-2",
                    "type": "read_write",
                    "current_state": "init",
                    "pending_state": "active",
                    "settings": {
                        "pg_settings": {}
                    },
                    "pooler_enabled": false,
                    "pooler_mode": "transaction",
                    "disabled": false,
                    "passwordless_access": true,
                    "creation_source": "console",
                    "created_at": "2022-12-03T15:37:07Z",
                    "updated_at": "2022-12-03T15:37:07Z",
                    "proxy_host": "us-east-2.aws.neon.tech",
                    "suspend_timeout_seconds": 0
                }
            },
            "EndpointState": {
                "description": "The state of the compute endpoint\n",
                "type": "string",
                "enum": [
                    "init",
                    "active",
                    "idle"
                ]
            },
            "EndpointType": {
                "description": "The compute endpoint type. Either `read_write` or `read_only`.\nThe `read_only` compute endpoint type is not yet supported.\n",
                "type": "string",
                "enum": [
                    "read_only",
                    "read_write"
                ]
            },
            "EndpointPoolerMode": {
                "description": "The connection pooler mode. Neon supports PgBouncer in `transaction` mode only.\n",
                "type": "string",
                "enum": [
                    "transaction"
                ]
            },
            "SuspendTimeoutSeconds": {
                "description": "Duration of inactivity in seconds after which the compute endpoint is\nautomatically suspended. The value `0` means use the global default.\nThe value `-1` means never suspend. The default value is `300` seconds (5 minutes).\nThe minimum value is `60` seconds (1 minute).\nThe maximum value is `604800` seconds (1 week). For more information, see\n[Auto-suspend configuration](https://neon.tech/docs/manage/endpoints#auto-suspend-configuration).\n",
                "type": "integer",
                "format": "int64",
                "minimum": -1,
                "maximum": 604800
            },
            "AllowedIps": {
                "description": "A list of IP addresses that are allowed to connect to the compute endpoint.\nIf the list is empty or not set, all IP addresses are allowed.\nIf protected_branches_only is true, the list will be applied only to protected branches.\n",
                "type": "object",
                "properties": {
                    "ips": {
                        "description": "A list of IP addresses that are allowed to connect to the endpoint.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "protected_branches_only": {
                        "description": "If true, the list will be applied only to protected branches.",
                        "type": "boolean"
                    },
                    "primary_branch_only": {
                        "deprecated": true,
                        "description": "DEPRECATED: Use `protected_branches_only`.\nIf true, the list will be applied only to the default branch.\n",
                        "type": "boolean"
                    }
                }
            },
            "EndpointCreateRequest": {
                "type": "object",
                "required": [
                    "endpoint"
                ],
                "properties": {
                    "endpoint": {
                        "type": "object",
                        "required": [
                            "branch_id",
                            "type"
                        ],
                        "properties": {
                            "branch_id": {
                                "description": "The ID of the branch the compute endpoint will be associated with\n",
                                "type": "string"
                            },
                            "region_id": {
                                "description": "The region where the compute endpoint will be created. Only the project's `region_id` is permitted.\n",
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/EndpointType"
                            },
                            "settings": {
                                "$ref": "#/components/schemas/EndpointSettingsData"
                            },
                            "autoscaling_limit_min_cu": {
                                "description": "The minimum number of Compute Units. The minimum value is `0.25`.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                                "$ref": "#/components/schemas/ComputeUnit"
                            },
                            "autoscaling_limit_max_cu": {
                                "description": "The maximum number of Compute Units.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                                "$ref": "#/components/schemas/ComputeUnit"
                            },
                            "provisioner": {
                                "$ref": "#/components/schemas/Provisioner"
                            },
                            "pooler_enabled": {
                                "deprecated": true,
                                "description": "Whether to enable connection pooling for the compute endpoint\n",
                                "type": "boolean"
                            },
                            "pooler_mode": {
                                "$ref": "#/components/schemas/EndpointPoolerMode"
                            },
                            "disabled": {
                                "type": "boolean",
                                "description": "Whether to restrict connections to the compute endpoint.\nEnabling this option schedules a suspend compute operation.\nA disabled compute endpoint cannot be enabled by a connection or\nconsole action. However, the compute endpoint is periodically\nenabled by check_availability operations.\n"
                            },
                            "passwordless_access": {
                                "type": "boolean",
                                "description": "NOT YET IMPLEMENTED. Whether to permit passwordless access to the compute endpoint.\n"
                            },
                            "suspend_timeout_seconds": {
                                "$ref": "#/components/schemas/SuspendTimeoutSeconds"
                            }
                        }
                    }
                }
            },
            "EndpointUpdateRequest": {
                "type": "object",
                "required": [
                    "endpoint"
                ],
                "properties": {
                    "endpoint": {
                        "type": "object",
                        "properties": {
                            "branch_id": {
                                "description": "The destination branch ID. The destination branch must not have an exsiting read-write endpoint.\n",
                                "type": "string"
                            },
                            "autoscaling_limit_min_cu": {
                                "description": "The minimum number of Compute Units. The minimum value is `0.25`.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                                "$ref": "#/components/schemas/ComputeUnit"
                            },
                            "autoscaling_limit_max_cu": {
                                "description": "The maximum number of Compute Units.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                                "$ref": "#/components/schemas/ComputeUnit"
                            },
                            "provisioner": {
                                "$ref": "#/components/schemas/Provisioner"
                            },
                            "settings": {
                                "$ref": "#/components/schemas/EndpointSettingsData"
                            },
                            "pooler_enabled": {
                                "deprecated": true,
                                "description": "Whether to enable connection pooling for the compute endpoint\n",
                                "type": "boolean"
                            },
                            "pooler_mode": {
                                "$ref": "#/components/schemas/EndpointPoolerMode"
                            },
                            "disabled": {
                                "description": "Whether to restrict connections to the compute endpoint.\nEnabling this option schedules a suspend compute operation.\nA disabled compute endpoint cannot be enabled by a connection or\nconsole action. However, the compute endpoint is periodically\nenabled by check_availability operations.\n",
                                "type": "boolean"
                            },
                            "passwordless_access": {
                                "description": "NOT YET IMPLEMENTED. Whether to permit passwordless access to the compute endpoint.\n",
                                "type": "boolean"
                            },
                            "suspend_timeout_seconds": {
                                "$ref": "#/components/schemas/SuspendTimeoutSeconds"
                            }
                        }
                    }
                }
            },
            "EndpointResponse": {
                "type": "object",
                "required": [
                    "endpoint"
                ],
                "properties": {
                    "endpoint": {
                        "$ref": "#/components/schemas/Endpoint"
                    }
                }
            },
            "ConnectionURIsResponse": {
                "type": "object",
                "required": [
                    "connection_uris"
                ],
                "properties": {
                    "connection_uris": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConnectionDetails"
                        }
                    }
                }
            },
            "ConnectionURIsOptionalResponse": {
                "type": "object",
                "properties": {
                    "connection_uris": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConnectionDetails"
                        }
                    }
                }
            },
            "EndpointsResponse": {
                "type": "object",
                "required": [
                    "endpoints"
                ],
                "properties": {
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Endpoint"
                        }
                    }
                }
            },
            "EndpointPasswordlessSessionAuthRequest": {
                "type": "object",
                "required": [
                    "session_id"
                ],
                "properties": {
                    "session_id": {
                        "type": "string"
                    }
                }
            },
            "Duration": {
                "description": "A Duration represents the elapsed time between two instants\nas an int64 nanosecond count. The representation limits the\nlargest representable duration to approximately 290 years.",
                "type": "integer",
                "format": "int64"
            },
            "StatementResult": {
                "type": "object",
                "required": [
                    "query"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/StatementData"
                    },
                    "error": {
                        "type": "string"
                    },
                    "explain_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExplainData"
                        }
                    },
                    "query": {
                        "type": "string"
                    }
                }
            },
            "StatementData": {
                "type": "object",
                "required": [
                    "truncated"
                ],
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "truncated": {
                        "type": "boolean"
                    }
                }
            },
            "ExplainData": {
                "type": "object",
                "required": [
                    "QUERY PLAN"
                ],
                "properties": {
                    "QUERY PLAN": {
                        "type": "string"
                    }
                }
            },
            "Role": {
                "type": "object",
                "required": [
                    "branch_id",
                    "name",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "branch_id": {
                        "description": "The ID of the branch to which the role belongs\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The role name\n",
                        "type": "string"
                    },
                    "password": {
                        "description": "The role password\n",
                        "type": "string"
                    },
                    "protected": {
                        "description": "Whether or not the role is system-protected\n",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the role was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the role was last updated\n",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "example": {
                    "branch_id": "br-wispy-meadow-118737",
                    "name": "casey",
                    "protected": false,
                    "created_at": "2022-11-23T17:42:25Z",
                    "updated_at": "2022-11-23T17:42:25Z"
                }
            },
            "RoleCreateRequest": {
                "type": "object",
                "required": [
                    "role"
                ],
                "properties": {
                    "role": {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "description": "The role name. Cannot exceed 63 bytes in length.\n",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "RoleResponse": {
                "type": "object",
                "required": [
                    "role"
                ],
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    }
                }
            },
            "RolesResponse": {
                "type": "object",
                "required": [
                    "roles"
                ],
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                }
            },
            "RolePasswordResponse": {
                "type": "object",
                "required": [
                    "password"
                ],
                "properties": {
                    "password": {
                        "description": "The role password\n",
                        "type": "string"
                    }
                }
            },
            "PaymentSourceBankCard": {
                "type": "object",
                "required": [
                    "last4"
                ],
                "properties": {
                    "last4": {
                        "type": "string",
                        "description": "Last 4 digits of the card.\n"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Brand of credit card.\n",
                        "enum": [
                            "amex",
                            "diners",
                            "discover",
                            "jcb",
                            "mastercard",
                            "unionpay",
                            "unknown",
                            "visa"
                        ]
                    },
                    "exp_month": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Credit card expiration month\n"
                    },
                    "exp_year": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Credit card expiration year\n"
                    }
                }
            },
            "PaymentSource": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of payment source. E.g. \"card\".\n"
                    },
                    "card": {
                        "$ref": "#/components/schemas/PaymentSourceBankCard"
                    }
                }
            },
            "BillingAccount": {
                "type": "object",
                "required": [
                    "payment_source",
                    "subscription_type",
                    "quota_reset_at_last",
                    "name",
                    "email",
                    "address_city",
                    "address_country",
                    "address_line1",
                    "address_line2",
                    "address_postal_code",
                    "address_state"
                ],
                "properties": {
                    "payment_source": {
                        "$ref": "#/components/schemas/PaymentSource"
                    },
                    "subscription_type": {
                        "$ref": "#/components/schemas/BillingSubscriptionType"
                    },
                    "quota_reset_at_last": {
                        "description": "The last time the quota was reset. Defaults to the date-time the account is created.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "description": "The full name of the individual or entity that owns the billing account. This name appears on invoices.",
                        "type": "string"
                    },
                    "email": {
                        "description": "Billing email, to receive emails related to invoices and subscriptions.\n",
                        "type": "string"
                    },
                    "address_city": {
                        "description": "Billing address city.\n",
                        "type": "string"
                    },
                    "address_country": {
                        "description": "Billing address country code defined by ISO 3166-1 alpha-2.\n",
                        "type": "string"
                    },
                    "address_country_name": {
                        "description": "Billing address country name.\n",
                        "type": "string"
                    },
                    "address_line1": {
                        "description": "Billing address line 1.\n",
                        "type": "string"
                    },
                    "address_line2": {
                        "description": "Billing address line 2.\n",
                        "type": "string"
                    },
                    "address_postal_code": {
                        "description": "Billing address postal code.\n",
                        "type": "string"
                    },
                    "address_state": {
                        "description": "Billing address state or region.\n",
                        "type": "string"
                    },
                    "orb_portal_url": {
                        "description": "Orb user portal url\n",
                        "type": "string"
                    },
                    "tax_id": {
                        "description": "The tax identification number for the billing account, displayed on invoices.\n",
                        "type": "string"
                    },
                    "tax_id_type": {
                        "description": "The type of the tax identification number based on the country.\n",
                        "type": "string"
                    }
                }
            },
            "BillingSubscriptionType": {
                "type": "string",
                "description": "Type of subscription to Neon Cloud.\nNotice that for users without billing account this will be \"UNKNOWN\"\n",
                "enum": [
                    "UNKNOWN",
                    "direct_sales",
                    "aws_marketplace",
                    "free_v2",
                    "launch",
                    "scale"
                ]
            },
            "Database": {
                "type": "object",
                "required": [
                    "id",
                    "branch_id",
                    "name",
                    "owner_name",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "The database ID\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "branch_id": {
                        "description": "The ID of the branch to which the database belongs\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The database name\n",
                        "type": "string"
                    },
                    "owner_name": {
                        "description": "The name of role that owns the database\n",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "A timestamp indicating when the database was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the database was last updated\n",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "example": {
                    "id": 834686,
                    "branch_id": "br-wispy-meadow-118737",
                    "name": "neondb",
                    "owner_name": "casey",
                    "created_at": "2022-11-30T18:25:15Z",
                    "updated_at": "2022-11-30T18:25:15Z"
                }
            },
            "DatabaseCreateRequest": {
                "type": "object",
                "required": [
                    "database"
                ],
                "properties": {
                    "database": {
                        "type": "object",
                        "required": [
                            "name",
                            "owner_name"
                        ],
                        "properties": {
                            "name": {
                                "description": "The name of the datbase\n",
                                "type": "string"
                            },
                            "owner_name": {
                                "description": "The name of the role that owns the database\n",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "DatabaseUpdateRequest": {
                "type": "object",
                "required": [
                    "database"
                ],
                "properties": {
                    "database": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The name of the database\n",
                                "type": "string"
                            },
                            "owner_name": {
                                "description": "The name of the role that owns the database\n",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "DatabaseResponse": {
                "type": "object",
                "required": [
                    "database"
                ],
                "properties": {
                    "database": {
                        "$ref": "#/components/schemas/Database"
                    }
                }
            },
            "DatabasesResponse": {
                "type": "object",
                "required": [
                    "databases"
                ],
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Database"
                        }
                    }
                }
            },
            "Invitation": {
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "org_id",
                    "invited_by",
                    "invited_at",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "description": "Email of the invited user",
                        "type": "string",
                        "format": "email"
                    },
                    "org_id": {
                        "description": "Organization id as it is stored in Neon",
                        "type": "string"
                    },
                    "invited_by": {
                        "description": "UUID for the user_id who extended the invitation",
                        "type": "string",
                        "format": "uuid"
                    },
                    "invited_at": {
                        "description": "Timestamp when the invitation was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "$ref": "#/components/schemas/MemberRole"
                    }
                }
            },
            "MemberRole": {
                "description": "The role of the organization member",
                "type": "string",
                "enum": [
                    "admin",
                    "member"
                ]
            },
            "Member": {
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "org_id",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "org_id": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/MemberRole"
                    },
                    "joined_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "MemberUserInfo": {
                "type": "object",
                "required": [
                    "email",
                    "name",
                    "last_name"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    }
                }
            },
            "MemberWithUser": {
                "type": "object",
                "required": [
                    "member",
                    "user"
                ],
                "properties": {
                    "member": {
                        "$ref": "#/components/schemas/Member"
                    },
                    "user": {
                        "$ref": "#/components/schemas/MemberUserInfo"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "handle",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "handle": {
                        "type": "string"
                    },
                    "created_at": {
                        "description": "A timestamp indicting when the organization was created\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "A timestamp indicating when the organization was updated\n",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrganizationsResponse": {
                "type": "object",
                "required": [
                    "organizations"
                ],
                "properties": {
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        }
                    }
                }
            },
            "OrganizationsUpdateRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "OrganizationInvitationsResponse": {
                "type": "object",
                "required": [
                    "invitations"
                ],
                "properties": {
                    "invitations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invitation"
                        }
                    }
                }
            },
            "OrganizationInviteCreateRequest": {
                "type": "object",
                "required": [
                    "email",
                    "role"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "role": {
                        "$ref": "#/components/schemas/MemberRole"
                    }
                }
            },
            "OrganizationInvitesCreateRequest": {
                "type": "object",
                "required": [
                    "invitations"
                ],
                "properties": {
                    "invitations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationInviteCreateRequest"
                        }
                    }
                }
            },
            "OrganizationInviteUpdateRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "role": {
                        "$ref": "#/components/schemas/MemberRole"
                    },
                    "resend": {
                        "type": "boolean"
                    }
                }
            },
            "OrganizationGuestsResponse": {
                "description": "A list of details for guests of an organisation\n",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrganizationGuest"
                }
            },
            "OrganizationGuest": {
                "description": "Details of an organisation guest, who is not directly a member of\nan organisation but has been shared one of the projects it owns\n",
                "type": "object",
                "required": [
                    "permission_id",
                    "user_email",
                    "project_id",
                    "project_name"
                ],
                "properties": {
                    "permission_id": {
                        "type": "string"
                    },
                    "user_email": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string"
                    },
                    "project_name": {
                        "type": "string"
                    }
                }
            },
            "OrganizationMemberUpdateRequest": {
                "type": "object",
                "required": [
                    "role"
                ],
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/MemberRole"
                    }
                }
            },
            "OrganizationMembersResponse": {
                "type": "object",
                "required": [
                    "members"
                ],
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MemberWithUser"
                        }
                    }
                }
            },
            "InvitationCreateRequest": {
                "type": "object",
                "required": [
                    "email",
                    "role"
                ],
                "properties": {
                    "email": {
                        "description": "Email to invite",
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/MemberRole"
                    }
                }
            },
            "OrganizationCreateRequest": {
                "type": "object",
                "required": [
                    "organization",
                    "subscription_type"
                ],
                "properties": {
                    "organization": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The organization name",
                                "type": "string"
                            },
                            "invitations": {
                                "description": "Emails with roles to invite to the organization",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InvitationCreateRequest"
                                }
                            }
                        }
                    },
                    "subscription_type": {
                        "$ref": "#/components/schemas/BillingSubscriptionType"
                    }
                }
            },
            "OrganizationLimits": {
                "type": "object",
                "required": [
                    "limits",
                    "features"
                ],
                "properties": {
                    "limits": {
                        "type": "object",
                        "required": [
                            "active_time",
                            "max_projects",
                            "max_branches",
                            "max_autoscaling_cu",
                            "cpu_seconds",
                            "max_active_endpoints",
                            "max_read_only_endpoints",
                            "max_allowed_ips",
                            "max_monitoring_retention_hours",
                            "max_history_retention_seconds",
                            "max_compute_time_non_primary",
                            "min_autosuspend_seconds"
                        ],
                        "properties": {
                            "active_time": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "max_projects": {
                                "type": "integer"
                            },
                            "max_branches": {
                                "type": "integer"
                            },
                            "max_autoscaling_cu": {
                                "type": "number",
                                "format": "float64"
                            },
                            "cpu_seconds": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "max_active_endpoints": {
                                "type": "integer"
                            },
                            "max_read_only_endpoints": {
                                "type": "integer"
                            },
                            "max_allowed_ips": {
                                "type": "integer"
                            },
                            "max_monitoring_retention_hours": {
                                "type": "integer"
                            },
                            "max_history_retention_seconds": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "max_compute_time_non_primary": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "min_autosuspend_seconds": {
                                "type": "integer"
                            }
                        }
                    },
                    "features": {
                        "$ref": "#/components/schemas/Features"
                    }
                }
            },
            "CurrentUserAuthAccount": {
                "type": "object",
                "required": [
                    "provider",
                    "email",
                    "name",
                    "login",
                    "image"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/IdentityProviderId"
                    }
                }
            },
            "LinkedAuthAccount": {
                "type": "object",
                "required": [
                    "provider",
                    "provider_display_name",
                    "username"
                ],
                "properties": {
                    "provider": {
                        "$ref": "#/components/schemas/IdentityProviderId"
                    },
                    "provider_display_name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "UpdateUserInfoRequest": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "image": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    }
                }
            },
            "CurrentUserInfoResponse": {
                "type": "object",
                "required": [
                    "active_seconds_limit",
                    "billing_account",
                    "id",
                    "email",
                    "login",
                    "name",
                    "last_name",
                    "image",
                    "projects_limit",
                    "branches_limit",
                    "max_autoscaling_limit",
                    "auth_accounts",
                    "plan"
                ],
                "properties": {
                    "active_seconds_limit": {
                        "description": "Control plane observes active endpoints of a user this amount of wall-clock time.\n",
                        "type": "integer",
                        "format": "int64"
                    },
                    "billing_account": {
                        "$ref": "#/components/schemas/BillingAccount"
                    },
                    "auth_accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrentUserAuthAccount"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "projects_limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "branches_limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "max_autoscaling_limit": {
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "compute_seconds_limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "plan": {
                        "type": "string"
                    }
                }
            },
            "CurrentUserInfoAuthResponse": {
                "type": "object",
                "required": [
                    "password_stored",
                    "auth_accounts",
                    "linked_accounts"
                ],
                "properties": {
                    "password_stored": {
                        "type": "boolean"
                    },
                    "auth_accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrentUserAuthAccount"
                        }
                    },
                    "linked_accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAuthAccount"
                        }
                    }
                }
            },
            "VerifyUserPasswordRequest": {
                "type": "object",
                "required": [
                    "password"
                ],
                "properties": {
                    "password": {
                        "type": "string"
                    }
                }
            },
            "IdentityProviderId": {
                "description": "Identity provider id from keycloak",
                "type": "string",
                "enum": [
                    "github",
                    "google",
                    "hasura",
                    "keycloak"
                ]
            },
            "EndpointSettingsData": {
                "type": "object",
                "description": "A collection of settings for a compute endpoint",
                "properties": {
                    "pg_settings": {
                        "$ref": "#/components/schemas/PgSettingsData"
                    },
                    "pgbouncer_settings": {
                        "$ref": "#/components/schemas/PgbouncerSettingsData"
                    }
                }
            },
            "ProjectQuota": {
                "type": "object",
                "description": "Per-project consumption quota. If the quota is exceeded, all active computes\nare automatically suspended and it will not be possible to start them with\nan API method call or incoming proxy connections. The only exception is\n`logical_size_bytes`, which is applied on per-branch basis, i.e., only the\ncompute on the branch that exceeds the `logical_size` quota will be suspended.\n\nQuotas are enforced based on per-project consumption metrics with the same names,\nwhich are reset at the end of each billing period (the first day of the month).\nLogical size is also an exception in this case, as it represents the total size\nof data stored in a branch, so it is not reset.\n\nA zero or empty quota value means 'unlimited'.\n",
                "properties": {
                    "active_time_seconds": {
                        "description": "The total amount of wall-clock time allowed to be spent by the project's compute endpoints.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "compute_time_seconds": {
                        "description": "The total amount of CPU seconds allowed to be spent by the project's compute endpoints.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "written_data_bytes": {
                        "description": "Total amount of data written to all of a project's branches.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "data_transfer_bytes": {
                        "description": "Total amount of data transferred from all of a project's branches using the proxy.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "logical_size_bytes": {
                        "description": "Limit on the logical size of every project's branch.\n",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }
            },
            "DefaultEndpointSettings": {
                "type": "object",
                "description": "A collection of settings for a Neon endpoint",
                "properties": {
                    "pg_settings": {
                        "$ref": "#/components/schemas/PgSettingsData"
                    },
                    "pgbouncer_settings": {
                        "$ref": "#/components/schemas/PgbouncerSettingsData"
                    },
                    "autoscaling_limit_min_cu": {
                        "description": "The minimum number of Compute Units. The minimum value is `0.25`.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "autoscaling_limit_max_cu": {
                        "description": "The maximum number of Compute Units. See [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
                        "$ref": "#/components/schemas/ComputeUnit"
                    },
                    "suspend_timeout_seconds": {
                        "$ref": "#/components/schemas/SuspendTimeoutSeconds"
                    }
                },
                "additionalProperties": {
                    "type": "string"
                }
            },
            "PgSettingsData": {
                "description": "A raw representation of Postgres settings",
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "PgbouncerSettingsData": {
                "description": "A raw representation of PgBouncer settings",
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "PgVersion": {
                "description": "The major Postgres version number. Currently supported versions are `14`, `15`, and `16`.",
                "type": "integer",
                "minimum": 14,
                "maximum": 16,
                "default": 16
            },
            "HealthCheck": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "description": "Service status",
                        "type": "string"
                    }
                },
                "example": {
                    "status": "ok"
                }
            },
            "ProjectOwnerData": {
                "type": "object",
                "required": [
                    "email",
                    "branches_limit",
                    "subscription_type"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "branches_limit": {
                        "type": "integer"
                    },
                    "subscription_type": {
                        "$ref": "#/components/schemas/BillingSubscriptionType"
                    }
                }
            },
            "GeneralError": {
                "type": "object",
                "description": "General Error",
                "required": [
                    "message",
                    "code"
                ],
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode"
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string"
                    }
                }
            },
            "ErrorCode": {
                "type": "string"
            },
            "BranchOperations": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BranchResponse"
                    },
                    {
                        "$ref": "#/components/schemas/OperationsResponse"
                    }
                ]
            },
            "EndpointOperations": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EndpointResponse"
                    },
                    {
                        "$ref": "#/components/schemas/OperationsResponse"
                    }
                ]
            },
            "DatabaseOperations": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DatabaseResponse"
                    },
                    {
                        "$ref": "#/components/schemas/OperationsResponse"
                    }
                ]
            },
            "RoleOperations": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RoleResponse"
                    },
                    {
                        "$ref": "#/components/schemas/OperationsResponse"
                    }
                ]
            },
            "SupportTicketSeverity": {
                "type": "string",
                "enum": [
                    "low",
                    "normal",
                    "high",
                    "critical"
                ]
            }
        }
    }
}